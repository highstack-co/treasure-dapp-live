{"version":3,"sources":["components/layout/Flex.tsx","views/FarmsV2/Heading.tsx","views/FarmsV2/Nebula.tsx","components/ExpandableSectionButton/ExpandableSectionButton.tsx","utils/getLiquidityUrlPathParts.ts","views/FarmsV2/components/FarmCard/DetailsSection.tsx","components/Tags.tsx","views/FarmsV2/components/FarmCard/CardHeading.tsx","hooks/useStake.ts","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/ModalInput/ModalInput.tsx","views/FarmsV2/components/DepositModal.tsx","views/FarmsV2/components/WithdrawModal.tsx","views/FarmsV2/components/FarmCard/StakeAction.tsx","hooks/useUnstake.ts","views/FarmsV2/components/FarmCard/HarvestAction.tsx","views/FarmsV2/components/FarmCard/CardActionsContainer.tsx","hooks/useApprove.ts","utils/compoundApyHelpers.ts","views/FarmsV2/components/FarmCard/ApyCalculatorModal.tsx","views/FarmsV2/components/FarmCard/ApyButton.tsx","views/FarmsV2/components/FarmCard/FarmCard.tsx","views/FarmsV2/FarmsV2.tsx","utils/formatBalance.ts","utils/callHelpers.ts","components/layout/Container.tsx","components/layout/Page.tsx","assets/images/boxlogo.png","config/index.ts","assets/images/hexBg.png"],"names":["FlexLayout","styled","div","animateLightBar","keyframes","TextBoxAnimation","TextAnimation","BorderShow","Wrapper","TextBox","H1","h1","P","p","LightBar","Flex","FarmImg","img","Heading","scene","camera","renderer","composer","src","BoxLogo","alt","cloudParticles","render","canvas","domElement","width","clientWidth","height","clientHeight","setSize","aspect","updateProjectionMatrix","resizeCanvasToDisplaySize","forEach","rotation","z","requestAnimationFrame","Canvas","BG","HexBg","Nebula","useEffect","bg","THREE","window","innerWidth","innerHeight","position","x","y","loadingManager","document","getElementById","style","display","ambient","add","directionalLight","set","purple","blue","green","querySelector","fog","setClearColor","color","loader","load","texture","cloudGeo","cloudMaterial","map","transparent","cloud","Math","random","PI","material","opacity","push","txture","textureEffect","PostProcessing","blendFunction","COLOR_DODGE","blendMode","value","bloomEffect","kernelSize","SMALL","useLuminanceFilter","luminanceThreshold","luminanceSmoothing","effectPass","renderToScreen","addPass","Init","id","theme","colors","primary","ExpandableSectionButton","onClick","expanded","role","bold","defaultProps","getLiquidityUrlPathParts","quoteTokenAdresses","tokenAddresses","firstPart","process","secondPart","StyledLinkExternal","LinkExternal","text","DetailsSection","bscScanAddress","removed","totalValueFormated","lpLabel","addLiquidityUrl","TranslateString","useI18n","justifyContent","href","external","CoreTag","props","variant","outline","startIcon","CommunityTag","CardHeading","Tag","isCommunityFarm","multiplier","farmImage","tokenSymbol","alignItems","mb","flexDirection","useStakeV2","farmAddress","index","dispatch","useDispatch","account","useWeb3React","web3","useWeb3","handleStake","useCallback","amount","a","farmContract","getFarmV2Contract","stakeV2","txHash","fetchFarmV2UserDataAsync","console","info","onStake","StyledSpacer","size","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","child","i","StyledTokenInput","input","isWarning","shadows","warning","inset","StyledInput","Input","mediaQueries","xs","sm","StyledErrorMessage","Text","ModalInput","max","symbol","onChange","onSelectMax","inputTitle","isBalanceZero","displayBalance","parseFloat","toFixed","pl","fontSize","toLocaleString","placeholder","scale","mr","DepositModal","onConfirm","onDismiss","tokenName","decimals","useState","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","handleChange","e","currentTarget","handleSelectMax","title","disabled","alignSelf","WithdrawModal","IconButtonWrapper","StakeAction","stakedBalance","tokenBalance","getAddress","handleUnstake","unstakeV2","onUnstake","useUnstakeV2","rawStakedBalance","getBalanceNumber","useModal","onPresentDeposit","onPresentWithdraw","HarvestAction","earnings","rawEarningsBalance","Action","CardActions","farm","requestedApproval","setRequestedApproval","useFarmV2FromSymbol","lpSymbol","lpAddresses","useFarmV2User","allowance","lpAddress","lpName","toUpperCase","isApproved","isGreaterThan","lpContract","masterChefContract","useMasterchef","onApprove","approve","tx","fetchFarmUserDataAsync","useApprove","getBep20Contract","handleApprove","error","textTransform","pr","mt","ConnectWalletButton","calculateCakeEarnedPerThousandDollars","number","numberOfDays","farmApy","principal","cakePrice","round","apyModalRoi","amountEarned","amountInvested","Grid","GridItem","Description","ApyCalculatorModal","apy","times","BigNumber","toNumber","oneThousandDollarsWorthOfCake","cakeEarnedPerThousand1D","cakeEarnedPerThousand7D","cakeEarnedPerThousand30D","cakeEarnedPerThousand365D","ApyButton","onPresentApyModal","event","stopPropagation","ml","RainbowLight","fadeIn","StyledCardAccent","secondary","borderColor","FCard","Divider","ExpandingWrapper","FarmCard","bnbPrice","showExpandableSection","setShowExpandableSection","communityFarms","includes","split","toLocaleLowerCase","totalValue","Number","liquidity","lpTotalInQuoteToken","quoteTokenSymbol","QuoteToken","BNB","CAKE","undefined","maximumFractionDigits","replace","earnLabel","dual","farmAPY","liquidityUrlPathParts","BASE_ADD_LIQUIDITY_URL","className","CardActionsContainer","ControlContainer","Hero","textSubtle","ToggleWrapper","LabelWrapper","FilterContainer","ViewControls","FarmVersionLabel","Farms","path","useRouteMatch","farmsLP","useFarmsV2","usePriceCakeBusd","x2pPrice","usePriceX2PBusd","usePriceBnbBusd","fastRefresh","useRefresh","activeFarms","farmsStaked","farmsToDisplay","cakePriceVsBNB","tokenAmount","cakeRewardPerBlock","rewardTokenPerBlock","cakeRewardPerYear","BLOCKS_PER_YEAR","BUSD","UST","lpTokenBalanceMC","X2P","cakeApy","dualApy","tokenPriceVsQuote","rewardPerBlock","plus","farmsList","Page","marginTop","exact","balance","dividedBy","pow","methods","options","address","ethers","constants","MaxUint256","send","from","stake","pid","deposit","toString","on","transactionHash","stakeTokens","unstake","emergencyWithdraw","withdraw","unstakeTokens","harvest","soushHarvest","sousChefContract","gas","soushHarvestBnb","Container","lg","config","EXPONENTIAL_AT","DECIMAL_PLACES","BASE_EXCHANGE_URL"],"mappings":"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","file":"static/js/6.1eabea02.chunk.js","sourcesContent":["import styled from 'styled-components'\r\n\r\nconst FlexLayout = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  & > * {\r\n    min-width: 280px;\r\n    max-width: 31.5%;\r\n    width: 100%;\r\n    margin: 0 8px;\r\n    margin-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default FlexLayout\r\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport BoxLogo from 'assets/images/boxlogo.png'\n\nconst animateLightBar = keyframes`\n\t0%,5% {\n\t\ttransform: scaleY(0) ;\n\t}\n    10%{\n        transform: scaleY(1) ;\n    }\n\t90% {\n        transform: scaleY(1) ;\n\t}\n\t95%,100% {\n        transform: scaleY(0) ;\n\t}\n`;\nconst TextBoxAnimation = keyframes`\n   0%,5% {\n\t\ttransform: translate3d(-80vw,0,0);\n\t}\n    10%{\n        transform:  translate3d(-80vw,0,0);\n    }\n\t90% {\n        transform:  translate3d(0,0,0);\n\t}\n\t95%,100% {\n        transform: translate3d(0,0,0);\n\t}\n`;\nconst TextAnimation = keyframes`\n    0%,5% {\n\t\ttransform:  translate3d(80vw,0,0);\n\t}\n    10%{\n        transform:  translate3d(80vw,0,0);\n    }\n\t90% {\n        transform:  translate3d(0,0,0);\n\t}\n\t95%,100% {\n        transform: translate3d(0,0,0);\n\t}\n`;\nconst BorderShow = keyframes`\n    0%{\n\t\topacity:0;\n\t}\n   \n\t95% {\n        opacity:0;\n\t}\n    100%{\n        opacity:1;\n    }\n`;\n\nconst Wrapper = styled.div`\n  position: relative;\n  margin: 1rem auto;\n  width: 90vw;\n  background: rgba(0, 0, 0, 0.65);\n  /* background-color: #ffce0024; */\n  border-radius: 10px;\n  :after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    box-shadow: inset 0 0 0.1em #ffce00, inset 0 0 0.2em #ffce00,\n      inset 0 0 0.4em #ffce00, 0 0 1em #ffce00;\n    animation: ${BorderShow} 2s linear forwards;\n    border: 5px solid #fff;\n    border-radius: inherit;\n  }\n  @media only screen and (min-width: 576px) {\n    margin: 0 auto;\n  }\n  @media only screen and (min-width: 768px) {\n    width: 90vw;\n  }\n  @media only screen and (min-width: 992px) {\n    width: 80vw;\n  }\n`;\nconst TextBox = styled.div`\n  overflow: hidden;\n  width: 100%;\n  /* transform: translate(300px,0); */\n  animation: ${TextBoxAnimation} 2s linear forwards;\n  padding: 1rem 1rem;\n`;\nconst H1 = styled.h1`\n  font-size: inherit;\n  /* white-space: nowrap; */\n  color: #fff;\n  text-shadow: 0 0 0.1em #ffce00, 0 0 0.2em #ffce00, 0 0 0.4em #ffce00,\n    0 0 0.8em #ffce00, 0 0 1.6em #ffce00;\n  /* transform: translate(-300px,0); */\n`;\nconst P = styled.p`\n  font-size: 0.3em;\n  line-height: 1;\n  color: #fff;\n  text-shadow: 0 0 0.1em #ffce00, 0 0 0.2em #ffce00, 0 0 0.4em #ffce00,\n    0 0 0.8em #ffce00, 0 0 1.6em #ffce00;\n`;\nconst LightBar = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 10px;\n  height: 100%;\n  border-radius: 10px;\n  background-color: #fff;\n  z-index: 2;\n  box-shadow: 0 0 10px #ffce00, 0 0 20px #ffce00, 0 0 40px #ffce00,\n    0 0 80px #ffce00, 0 0 120px #ffce00;\n  animation: ${animateLightBar} 2s linear forwards;\n`;\nconst Flex = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  animation: ${TextAnimation} 2s linear forwards;\n  font-size: 4rem;\n  h1 {\n    text-align: center;\n  }\n  p {\n    text-align: center;\n    margin-bottom: 1rem;\n  }\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-around;\n    font-size: 5rem;\n    > * {\n      width: 50%;\n    }\n    h1,\n    p {\n      text-align: left;\n    }\n  }\n`;\nconst FarmImg = styled.img`\n  width: 150px;\n  height: 150px;\n\n  @media only screen and (min-width: 768px) {\n    width: 160px;\n    height: 160px;\n  }\n  @media only screen and (min-width: 992px) {\n    width: 190px;\n    height: 190px;\n  }\n`;\nfunction Heading() {\n  return (\n    <Wrapper>\n      <TextBox>\n        <Flex>\n          <div>\n            <H1>\n              TREASURY MACHINES\n              <br />\n            </H1>\n            <P>Activate a Machine to generate rewards.</P>\n          </div>\n          <FarmImg src={BoxLogo} alt=\"Staking Image\" />\n        </Flex>\n\n        <LightBar />\n      </TextBox>\n    </Wrapper>\n  );\n}\n\nexport default Heading;\n","import React, { useEffect } from \"react\";\nimport * as THREE from \"three\";\nimport * as PostProcessing from \"postprocessing\";\nimport HexBg from 'assets/images/hexBg.png'\nimport styled from \"styled-components\";\n\n\nlet scene;\nlet camera;\nlet renderer;\nconst cloudParticles = [] as any;\nlet composer;\n\nfunction resizeCanvasToDisplaySize() {\n  const canvas = renderer.domElement;\n  // look up the size the canvas is being displayed\n  const width = canvas.clientWidth;\n  const height = canvas.clientHeight;\n\n  // adjust displayBuffer size to match\n  if (canvas.width !== width || canvas.height !== height) {\n    // you must pass false here or three.js sadly fights the browser\n    renderer.setSize(width, height, false);\n    camera.aspect = width / height;\n    camera.updateProjectionMatrix();\n\n    // update any render target sizes here\n  }\n}\n\nconst onWindowResize = () => {\n  camera.aspect = window.innerWidth / window.innerHeight;\n  camera.updateProjectionMatrix();\n  renderer.setSize(window.innerWidth, window.innerHeight);\n};\n\nconst Init = (bg = 0x140c0c) => {\n  // const Parent = document.querySelector(\"#canvas\");\n  scene = new THREE.Scene();\n  camera = new THREE.PerspectiveCamera(\n    60,\n    window.innerWidth / window.innerHeight,\n    1,\n    1000\n  );\n  // camera.position.x=-50;\n  // camera.position.y=;\n  camera.position.z = 1;\n  camera.rotation.x = 1.16;\n  camera.rotation.y = -0.12;\n  camera.rotation.z = 0.27;\n  const loadingManager = new THREE.LoadingManager(() => {\n    document.getElementById(\"FOGBG\").style.display = \"none\";\n  });\n  // const ambient = new THREE.AmbientLight(0x555555);\n  // scene.add(ambient);\n  // const directionalLight = new THREE.DirectionalLight(0x38edc3);\n  // directionalLight.position.set(0, 0, 1);\n  // scene.add(directionalLight);\n  // const redlight = new THREE.PointLight(0x640101, 50, 450, 1.7);\n  // redlight.position.set(200, 300, 100);\n  // scene.add(redlight);\n  // const purpleLight = new THREE.PointLight(0x771aff, 50, 450, 1.7);\n  // purpleLight.position.set(100, 300, 100);\n  // scene.add(purpleLight);\n  // const greenLight = new THREE.PointLight(0x45ca92, 50, 450, 1.7);\n  // greenLight.position.set(100, 300, 100);\n  // scene.add(greenLight);\n  // const blueLight = new THREE.PointLight(0x792e92, 50, 450, 1.7);\n  // blueLight.position.set(300, 300, 200);\n  // scene.add(blueLight);\n\n  const ambient = new THREE.AmbientLight(0x555555);\n  scene.add(ambient);\n  const directionalLight = new THREE.DirectionalLight(0Xe9571f);\n  directionalLight.position.set(0, 0, 1);\n  scene.add(directionalLight);\n\n  const purple = new THREE.PointLight(0x73590c, 50, 450, 1.7);\n  purple.position.set(200, 300, 100);\n  scene.add(purple);\n  const blue = new THREE.PointLight(0xa49208, 50, 450, 1.7);\n  blue.position.set(100, 300, 100);\n  scene.add(blue);\n  const green = new THREE.PointLight(0x82441e, 50, 450, 1.7);\n  green.position.set(300, 300, 200);\n  scene.add(green);\n\n  renderer = new THREE.WebGLRenderer({\n    canvas: document.querySelector(\"#canvas\"),\n  });\n  // console.log(\"width\",Parent?.getBoundingClientRect().width);\n  //   renderer.setSize(Parent?.getBoundingClientRect().width, Parent?.getBoundingClientRect().height);\n  scene.fog = new THREE.FogExp2(bg, 0.001);\n  renderer.setClearColor(scene.fog.color);\n\n  //   Parent?.appendChild(renderer.domElement);\n\n  const loader = new THREE.TextureLoader(loadingManager);\n  loader.load(\"/smoke.png\", function (texture) {\n    //  texture is loaded\n    const cloudGeo = new THREE.PlaneBufferGeometry(500, 500);\n    const cloudMaterial = new THREE.MeshLambertMaterial({\n      map: texture,\n      transparent: true,\n    });\n    for (let p = 0; p < 50; p++) {\n      const cloud = new THREE.Mesh(cloudGeo, cloudMaterial);\n      cloud.position.set(\n        Math.random() * 800 - 300,\n        500,\n        Math.random() * 450 - 450\n      );\n      cloud.rotation.x = 1.16;\n      cloud.rotation.y = -0.12;\n      cloud.rotation.z = Math.random() * 2 * Math.PI;\n      cloud.material.opacity = 0.55;\n      cloudParticles.push(cloud);\n      scene.add(cloud);\n    }\n  });\n\n  loader.load(HexBg, (txture) => {\n    const textureEffect = new PostProcessing.TextureEffect({\n      blendFunction: PostProcessing.BlendFunction.COLOR_DODGE,\n      texture: txture,\n    });\n    textureEffect.blendMode.opacity.value = 0.4;\n\n    const bloomEffect = new PostProcessing.BloomEffect({\n      blendFunction: PostProcessing.BlendFunction.COLOR_DODGE,\n      kernelSize: PostProcessing.KernelSize.SMALL,\n      useLuminanceFilter: true,\n      luminanceThreshold: 0.3,\n      luminanceSmoothing: 0.75,\n    });\n    bloomEffect.blendMode.opacity.value = 1.5;\n\n    const effectPass = new PostProcessing.EffectPass(\n      camera,\n      bloomEffect,\n      textureEffect\n    );\n    effectPass.renderToScreen = true;\n\n    composer = new PostProcessing.EffectComposer(renderer);\n    composer.addPass(new PostProcessing.RenderPass(scene, camera));\n    composer.addPass(effectPass);\n\n    render();\n  });\n  //   console.log(renderer.domElement)\n};\n/* eslint-disable no-param-reassign */\nconst render = () => {\n  resizeCanvasToDisplaySize();\n  cloudParticles.forEach((p) => {\n    p.rotation.z -= 0.0015;\n  });\n  composer.render(0.1);\n  requestAnimationFrame(render);\n};\n\nconst Canvas = styled.canvas`\n  position: fixed;\n  top: 80px;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  height: 100%;\n  width: 100%;\n  min-width: 100vw;\n  min-height: 100vh;\n  z-index: -1;\n`;\nconst BG = styled.div`\n  position: fixed;\n  top: 80px;\n  left: 0;\n  height: 100vh;\n  width: 100vw;\n  background: ${HexBg};\n  background-size: cover;\n  background-repeat: no-repeat;\n`;\nfunction Nebula() {\n  useEffect(() => {\n    // window.addEventListener(\"resize\", resizeCanvasToDisplaySize, false);\n    Init();\n    return () => {\n      //   window.removeEventListener(\"resize\", resizeCanvasToDisplaySize, false);\n    };\n  }, []);\n\n  return (\n    <>\n      <Canvas id=\"canvas\" />\n      <BG id=\"FOGBG\" />\n    </>\n  );\n}\n\nexport default Nebula;\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface ExpandableSectionButtonProps {\r\n  onClick?: () => void\r\n  expanded?: boolean\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\r\n  return (\r\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\r\n      <Text color=\"primary\" bold>\r\n        {expanded ? 'Hide' : 'Details'}\r\n      </Text>\r\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nExpandableSectionButton.defaultProps = {\r\n  expanded: false,\r\n}\r\n\r\nexport default ExpandableSectionButton\r\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\r\n// Each part of the url represents a different side of the LP pair.\r\nconst getLiquidityUrlPathParts = ({ quoteTokenAdresses, tokenAddresses }) => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  const firstPart = quoteTokenAdresses[chainId]\r\n  const secondPart = tokenAddresses[chainId]\r\n  return `${firstPart}/${secondPart}`\r\n}\r\n\r\nexport default getLiquidityUrlPathParts\r\n","import React from 'react'\r\nimport useI18n from 'hooks/useI18n'\r\nimport styled from 'styled-components'\r\nimport { Text, Flex, Link, LinkExternal } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface ExpandableSectionProps {\r\n  bscScanAddress?: string\r\n  removed?: boolean\r\n  totalValueFormated?: string\r\n  lpLabel?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin-top: 24px;\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  text-decoration: none;\r\n  font-weight: normal;\r\n  color: ${({ theme }) => theme.colors.text};\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  svg {\r\n    padding-left: 4px;\r\n    height: 18px;\r\n    width: auto;\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\r\n  bscScanAddress,\r\n  removed,\r\n  totalValueFormated,\r\n  lpLabel,\r\n  addLiquidityUrl,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Flex justifyContent=\"space-between\">\r\n        <Text>{TranslateString(316, 'Stake')}:</Text>\r\n        <StyledLinkExternal href={addLiquidityUrl}>{lpLabel}</StyledLinkExternal>\r\n      </Flex>\r\n      {!removed && (\r\n        <Flex justifyContent=\"space-between\">\r\n          <Text>{TranslateString(23, 'Total Liquidity')}:</Text>\r\n          <Text>{totalValueFormated}</Text>\r\n        </Flex>\r\n      )}\r\n      <Flex justifyContent=\"flex-start\">\r\n        <Link external href={bscScanAddress} bold={false}>\r\n          {TranslateString(356, 'View on EtherScan')}\r\n        </Link>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default DetailsSection\r\n","import React from 'react'\r\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@pancakeswap-libs/uikit'\r\n\r\nconst CoreTag = (props) => (\r\n  <Tag variant=\"secondary\" style={{color:\"#fff\"}} outline startIcon={<VerifiedIcon />} {...props}>\r\n    Core\r\n  </Tag>\r\n)\r\n\r\nconst CommunityTag = (props) => (\r\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon />} {...props}>\r\n    Community\r\n  </Tag>\r\n)\r\n\r\nconst BinanceTag = (props) => (\r\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon />} {...props}>\r\n    Binance\r\n  </Tag>\r\n)\r\n\r\nconst DualTag = (props) => (\r\n  <Tag variant=\"textSubtle\" outline {...props}>\r\n    Dual\r\n  </Tag>\r\n)\r\n\r\nexport { CoreTag, CommunityTag, BinanceTag, DualTag }\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Tag, Flex, Heading, Image } from '@pancakeswap-libs/uikit'\r\nimport { CommunityTag, CoreTag } from 'components/Tags'\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  multiplier?: string\r\n  isCommunityFarm?: boolean\r\n  farmImage?: string\r\n  tokenSymbol?: string\r\n}\r\n\r\nconst Wrapper = styled(Flex)`\r\n  svg {\r\n    margin-right: 4px;\r\n  }\r\n`\r\n\r\nconst MultiplierTag = styled(Tag)`\r\n  margin-left: 4px;\r\n`\r\n\r\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\r\n  lpLabel,\r\n  multiplier,\r\n  isCommunityFarm,\r\n  farmImage,\r\n  tokenSymbol,\r\n}) => {\r\n  return (\r\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\r\n      <Image src={`/images/farms/${farmImage}.png`} alt={tokenSymbol} width={64} height={64} />\r\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\r\n        <Heading mb=\"4px\">{lpLabel}</Heading>\r\n        <Flex justifyContent=\"center\">\r\n          {isCommunityFarm ? <CommunityTag /> : <CoreTag />}\r\n          {/* <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag> */}\r\n        </Flex>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CardHeading\r\n","import BigNumber from \"bignumber.js\";\r\nimport { useCallback } from \"react\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport useWeb3 from \"hooks/useWeb3\";\r\nimport { fetchFarmUserDataAsync, fetchFarmV2UserDataAsync } from \"state/actions\";\r\nimport { stake, stakeV2 } from \"utils/callHelpers\";\r\nimport { getFarmV2Contract } from \"utils/contractHelpers\";\r\nimport { getAddress } from \"utils/addressHelpers\";\r\n\r\nimport { useMasterchef } from \"./useContract\";\r\n\r\nexport const useStake = (pid: number) => {\r\n  const dispatch = useDispatch();\r\n  const { account } = useWeb3React();\r\n  const masterChefContract = useMasterchef();\r\n\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await stake(masterChefContract, pid, amount, account);\r\n      dispatch(fetchFarmUserDataAsync(account));\r\n      console.info(txHash);\r\n    },\r\n    [account, dispatch, masterChefContract, pid],\r\n  );\r\n\r\n  return { onStake: handleStake };\r\n};\r\n\r\nexport const useStakeV2 = (farmAddress: string, index: number) => {\r\n  const dispatch = useDispatch();\r\n  const { account } = useWeb3React();\r\n  const web3 = useWeb3()\r\n  const handleStake = useCallback(\r\n    async (amount: string) => {\r\n      const farmContract = getFarmV2Contract(farmAddress, web3);\r\n      const txHash = await stakeV2(farmContract, index, amount, account);\r\n      dispatch(fetchFarmV2UserDataAsync(account));\r\n      console.info(txHash);\r\n    },\r\n    [account, dispatch, farmAddress, index, web3],\r\n  );\r\n\r\n  return { onStake: handleStake };\r\n};\r\n\r\nexport default useStake;\r\n","import React, { useContext } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg'\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\r\n  const { spacing } = useContext(ThemeContext)\r\n\r\n  let s: number\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6]\r\n      break\r\n    case 'sm':\r\n      s = spacing[2]\r\n      break\r\n    case 'md':\r\n    default:\r\n      s = spacing[4]\r\n  }\r\n\r\n  return <StyledSpacer size={s} />\r\n}\r\n\r\ninterface StyledSpacerProps {\r\n  size: number\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`\r\n\r\nexport default Spacer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Spacer from '../Spacer'\r\n\r\nconst ModalActions: React.FC = ({ children }) => {\r\n  const l = React.Children.toArray(children).length\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>{child}</StyledModalAction>\r\n          {i < l - 1 && <Spacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  )\r\n}\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\r\n  display: flex;\r\n  margin: 0;\r\n  padding: ${(props) => props.theme.spacing[4]}px 0;\r\n`\r\n\r\nconst StyledModalAction = styled.div`\r\n  flex: 1;\r\n`\r\n\r\nexport default ModalActions\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Button, Input, InputProps, Flex, Link } from '@pancakeswap-libs/uikit'\r\nimport useI18n from '../../hooks/useI18n'\r\n\r\ninterface ModalInputProps {\r\n  max: string\r\n  symbol: string\r\n  onSelectMax?: () => void\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n  value: string\r\n  addLiquidityUrl?: string\r\n  inputTitle?: string\r\n}\r\n\r\nconst getBoxShadow = ({ isWarning = false, theme }) => {\r\n  if (isWarning) {\r\n    return theme.shadows.warning\r\n  }\r\n\r\n  return theme.shadows.inset\r\n}\r\n\r\nconst StyledTokenInput = styled.div<InputProps>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  box-shadow: ${getBoxShadow};\r\n  color: ${({ theme }) => theme.colors.text};\r\n  padding: 8px 16px 8px 0;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledInput = styled(Input)`\r\n  box-shadow: none;\r\n  width: 60px;\r\n  margin: 0 8px;\r\n  padding: 0 8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    width: 80px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: auto;\r\n  }\r\n`\r\n\r\nconst StyledErrorMessage = styled(Text)`\r\n  position: absolute;\r\n  bottom: -22px;\r\n  a {\r\n    display: inline;\r\n  }\r\n`\r\n\r\nconst ModalInput: React.FC<ModalInputProps> = ({\r\n  max,\r\n  symbol,\r\n  onChange,\r\n  onSelectMax,\r\n  value,\r\n  addLiquidityUrl,\r\n  inputTitle,\r\n}) => {\r\n  const TranslateString = useI18n()\r\n  const isBalanceZero = max === '0' || !max\r\n\r\n  const displayBalance = isBalanceZero ? '0' : parseFloat(max).toFixed(4)\r\n\r\n  return (\r\n    <div style={{ position: 'relative' }}>\r\n      <StyledTokenInput isWarning={isBalanceZero}>\r\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\r\n          <Text fontSize=\"14px\">{inputTitle}</Text>\r\n          <Text fontSize=\"14px\">\r\n            {TranslateString(1120, 'Balance')}: {displayBalance.toLocaleString()}\r\n          </Text>\r\n        </Flex>\r\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\r\n          <StyledInput onChange={onChange} placeholder=\"0\" value={value} />\r\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\r\n            {TranslateString(452, 'Max')}\r\n          </Button>\r\n          <Text fontSize=\"16px\">{symbol}</Text>\r\n        </Flex>\r\n      </StyledTokenInput>\r\n      {isBalanceZero && (\r\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\r\n          No tokens to stake:{' '}\r\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\r\n            {TranslateString(999, 'get')} {symbol}\r\n          </Link>\r\n        </StyledErrorMessage>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ModalInput\r\n","import BigNumber from \"bignumber.js\";\r\nimport React, { useCallback, useMemo, useState } from \"react\";\r\nimport { Button, Modal, LinkExternal } from \"@pancakeswap-libs/uikit\";\r\nimport ModalActions from \"components/ModalActions\";\r\nimport ModalInput from \"components/ModalInput\";\r\nimport useI18n from \"hooks/useI18n\";\r\nimport { getFullDisplayBalance } from \"utils/formatBalance\";\r\n\r\ninterface DepositModalProps {\r\n  max: BigNumber;\r\n  onConfirm: (amount: string) => void;\r\n  onDismiss?: () => void;\r\n  tokenName?: string;\r\n  addLiquidityUrl?: string;\r\n  decimals: number;\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({\r\n  max,\r\n  onConfirm,\r\n  onDismiss,\r\n  tokenName = \"\",\r\n  addLiquidityUrl,\r\n  decimals = 18\r\n}) => {\r\n  const [val, setVal] = useState(\"\");\r\n  const [pendingTx, setPendingTx] = useState(false);\r\n  const TranslateString = useI18n();\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max, decimals);\r\n  }, [max, decimals]);\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value);\r\n    },\r\n    [setVal],\r\n  );\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance);\r\n  }, [fullBalance, setVal]);\r\n  \r\n  return (\r\n    <Modal\r\n      title={TranslateString(1068, \"Stake LP tokens\")}\r\n      onDismiss={onDismiss}\r\n    >\r\n      <ModalInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n        inputTitle={TranslateString(1070, \"Stake\")}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\">\r\n          {TranslateString(462, \"Cancel\")}\r\n        </Button>\r\n        <Button\r\n          width=\"100%\"\r\n          disabled={pendingTx || fullBalance === \"0\" || val === \"0\"}\r\n          onClick={async () => {\r\n            setPendingTx(true);\r\n            await onConfirm(val);\r\n            setPendingTx(false);\r\n            onDismiss();\r\n          }}\r\n        >\r\n          {pendingTx\r\n            ? TranslateString(488, \"Pending Confirmation\")\r\n            : TranslateString(464, \"Confirm\")}\r\n        </Button>\r\n      </ModalActions>\r\n      <LinkExternal href={addLiquidityUrl} style={{ alignSelf: \"center\" }}>\r\n        {TranslateString(999, \"Get\")} {tokenName}\r\n      </LinkExternal>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default DepositModal;\r\n","import BigNumber from \"bignumber.js\";\r\nimport React, { useCallback, useMemo, useState } from \"react\";\r\nimport { Button, Modal } from \"@pancakeswap-libs/uikit\";\r\nimport ModalActions from \"components/ModalActions\";\r\nimport ModalInput from \"components/ModalInput\";\r\nimport useI18n from \"hooks/useI18n\";\r\nimport { getFullDisplayBalance } from \"utils/formatBalance\";\r\n\r\ninterface WithdrawModalProps {\r\n  max: BigNumber;\r\n  onConfirm: (amount: string) => void;\r\n  onDismiss?: () => void;\r\n  tokenName?: string;\r\n  decimals: number;\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({\r\n  onConfirm,\r\n  onDismiss,\r\n  max,\r\n  tokenName = \"\",\r\n  decimals = 18\r\n}) => {\r\n  const [val, setVal] = useState(\"\");\r\n  const [pendingTx, setPendingTx] = useState(false);\r\n  const TranslateString = useI18n();\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max, decimals);\r\n  }, [max, decimals]);\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      setVal(e.currentTarget.value);\r\n    },\r\n    [setVal],\r\n  );\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance);\r\n  }, [fullBalance, setVal]);\r\n\r\n  return (\r\n    <Modal\r\n      title={TranslateString(1126, \"Unstake LP tokens\")}\r\n      onDismiss={onDismiss}\r\n    >\r\n      <ModalInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        inputTitle={TranslateString(588, \"Unstake\")}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\">\r\n          {TranslateString(462, \"Cancel\")}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx}\r\n          onClick={async () => {\r\n            setPendingTx(true);\r\n            await onConfirm(val);\r\n            setPendingTx(false);\r\n            onDismiss();\r\n          }}\r\n          width=\"100%\"\r\n        >\r\n          {pendingTx\r\n            ? TranslateString(488, \"Pending Confirmation\")\r\n            : TranslateString(464, \"Confirm\")}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default WithdrawModal;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport {\r\n  Button,\r\n  Flex,\r\n  Heading,\r\n  IconButton,\r\n  AddIcon,\r\n  MinusIcon,\r\n  useModal,\r\n} from \"@pancakeswap-libs/uikit\";\r\nimport useI18n from \"hooks/useI18n\";\r\nimport { useStakeV2 } from \"hooks/useStake\";\r\nimport { useUnstakeV2 } from \"hooks/useUnstake\";\r\nimport { getBalanceNumber } from \"utils/formatBalance\";\r\nimport { getAddress } from \"utils/addressHelpers\";\r\nimport { Address } from \"config/constants/types\";\r\nimport DepositModal from \"../DepositModal\";\r\nimport WithdrawModal from \"../WithdrawModal\";\r\n\r\ninterface FarmV2CardActionsProps {\r\n  stakedBalance?: BigNumber;\r\n  tokenBalance?: BigNumber;\r\n  tokenName?: string;\r\n  index?: number;\r\n  addLiquidityUrl?: string;\r\n  farmAddress: Address;\r\n}\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  svg {\r\n    width: 20px;\r\n  }\r\n`;\r\n\r\nconst StakeAction: React.FC<FarmV2CardActionsProps> = ({\r\n  stakedBalance,\r\n  tokenBalance,\r\n  tokenName,\r\n  index,\r\n  addLiquidityUrl,\r\n  farmAddress\r\n}) => {\r\n  const TranslateString = useI18n();\r\n  const { onStake } = useStakeV2(getAddress(farmAddress), index);\r\n  const { onUnstake } = useUnstakeV2(getAddress(farmAddress), index);\r\n\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance, index === 3 ? 9 : 18);\r\n  const displayBalance = rawStakedBalance.toLocaleString();\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal\r\n      max={tokenBalance}\r\n      onConfirm={onStake}\r\n      tokenName={tokenName}\r\n      addLiquidityUrl={addLiquidityUrl}\r\n      decimals={index === 3 ? 9 : 18}\r\n    />,\r\n  );\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal\r\n      max={stakedBalance}\r\n      onConfirm={onUnstake}\r\n      tokenName={tokenName}\r\n      decimals={index === 3 ? 9 : 18}\r\n    />,\r\n  );\r\n\r\n  const renderStakingButtons = () => {\r\n    return rawStakedBalance === 0 ? (\r\n      <Button onClick={onPresentDeposit}>\r\n        {TranslateString(999, \"Stake LP\")}\r\n      </Button>\r\n    ) : (\r\n      <IconButtonWrapper>\r\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\r\n          <MinusIcon color=\"primary\" width=\"14px\" />\r\n        </IconButton>\r\n        <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\r\n          <AddIcon color=\"primary\" width=\"14px\" />\r\n        </IconButton>\r\n      </IconButtonWrapper>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Heading color={rawStakedBalance === 0 ? \"textDisabled\" : \"text\"}>\r\n        {displayBalance}\r\n      </Heading>\r\n      {renderStakingButtons()}\r\n    </Flex>\r\n  );\r\n};\r\n\r\nexport default StakeAction;\r\n","import { useCallback } from \"react\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport useWeb3 from \"hooks/useWeb3\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport {\r\n  fetchFarmUserDataAsync,\r\n  fetchFarmV2UserDataAsync,\r\n  updateUserStakedBalance,\r\n  updateUserBalance,\r\n  updateUserPendingReward,\r\n} from \"state/actions\";\r\nimport { unstake, unstakeV2 } from \"utils/callHelpers\";\r\nimport { getFarmV2Contract } from \"utils/contractHelpers\";\r\nimport { useMasterchef } from \"./useContract\";\r\n\r\nexport const useUnstake = (pid: number) => {\r\n  const dispatch = useDispatch();\r\n  const { account } = useWeb3React();\r\n  const masterChefContract = useMasterchef();\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string) => {\r\n      const txHash = await unstake(masterChefContract, pid, amount, account);\r\n      dispatch(fetchFarmUserDataAsync(account));\r\n      console.info(txHash);\r\n    },\r\n    [account, dispatch, masterChefContract, pid],\r\n  );\r\n\r\n  return { onUnstake: handleUnstake };\r\n};\r\n\r\nexport const useUnstakeV2 = (farmAddress: string, index: number) => {\r\n  const dispatch = useDispatch();\r\n  const { account } = useWeb3React();\r\n  const web3 = useWeb3()\r\n\r\n  const handleUnstake = useCallback(\r\n    async (amount: string) => {\r\n      \r\n      const farmContract = getFarmV2Contract(farmAddress, web3);\r\n      const txHash = await unstakeV2(farmContract, index, amount, account);\r\n      dispatch(fetchFarmV2UserDataAsync(account));\r\n      console.info(txHash);\r\n    },\r\n    [account, dispatch, farmAddress, index, web3],\r\n  );\r\n\r\n  return { onUnstake: handleUnstake };\r\n};\r\n\r\n\r\nexport default useUnstake;\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading } from '@pancakeswap-libs/uikit'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getAddress } from \"utils/addressHelpers\";\r\nimport { useStakeV2 } from \"hooks/useStake\";\r\n\r\ninterface FarmCardActionsProps {\r\n  earnings?: BigNumber\r\n  farmAddress: string\r\n  index: number\r\n\r\n}\r\n\r\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, farmAddress, index }) => {\r\n  const { account } = useWeb3React()\r\n  const TranslateString = useI18n()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onStake } = useStakeV2(farmAddress, index);\r\n\r\n  const rawEarningsBalance = account ? getBalanceNumber(earnings) : 0\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n\r\n  return (\r\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>{displayBalance}</Heading>\r\n      <Button\r\n        disabled={rawEarningsBalance === 0 || pendingTx}\r\n        onClick={async () => {\r\n          setPendingTx(true)\r\n          await onStake('0');\r\n          setPendingTx(false)\r\n        }}\r\n      >\r\n        {TranslateString(562, 'Harvest')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React, { useState, useCallback } from \"react\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport styled from \"styled-components\";\r\nimport { provider as ProviderType } from \"web3-core\";\r\nimport { getAddress } from \"utils/addressHelpers\";\r\nimport { getBep20Contract, getFarmV2Contract } from \"utils/contractHelpers\";\r\nimport { Button, Flex, Text } from \"@pancakeswap-libs/uikit\";\r\nimport { FarmV2 } from \"state/types\";\r\nimport { useFarmV2FromSymbol, useFarmV2User } from \"state/hooks\";\r\nimport useI18n from \"hooks/useI18n\";\r\nimport useWeb3 from \"hooks/useWeb3\";\r\nimport { useApprove } from \"hooks/useApprove\";\r\nimport ConnectWalletButton from \"components/ConnectWalletButton\";\r\nimport StakeAction from \"./StakeAction\";\r\nimport HarvestAction from \"./HarvestAction\";\r\n\r\nconst Action = styled.div`\r\n  padding-top: 16px;\r\n`;\r\nexport interface FarmV2WithStakedValue extends FarmV2 {\r\n  apy?: BigNumber;\r\n}\r\n\r\ninterface FarmV2CardActionsProps {\r\n  farm: FarmV2WithStakedValue;\r\n  provider?: ProviderType;\r\n  account?: string;\r\n  addLiquidityUrl?: string;\r\n}\r\n\r\nconst CardActions: React.FC<FarmV2CardActionsProps> = ({\r\n  farm,\r\n  account,\r\n  addLiquidityUrl,\r\n}) => {\r\n  const TranslateString = useI18n();\r\n  const [requestedApproval, setRequestedApproval] = useState(false);\r\n  const {\r\n    farm: { lpAddresses },\r\n    index,\r\n  } = useFarmV2FromSymbol(farm.lpSymbol);\r\n  const { allowance, tokenBalance, stakedBalance, earnings } =\r\n    useFarmV2User(index);\r\n  const lpAddress = getAddress(lpAddresses);\r\n  const lpName = farm.lpSymbol.toUpperCase();\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0);\r\n  const web3 = useWeb3();\r\n\r\n  const lpContract = getBep20Contract(lpAddress, web3);\r\n  const farmContract = getFarmV2Contract(getAddress(farm.farmAddress), web3);\r\n\r\n  const { onApprove } = useApprove(lpContract, farmContract);\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true);\r\n      await onApprove();\r\n      setRequestedApproval(false);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  }, [onApprove]);\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (\r\n      <StakeAction\r\n        stakedBalance={stakedBalance}\r\n        tokenBalance={tokenBalance}\r\n        tokenName={lpName}\r\n        index={index}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n        farmAddress={farm.farmAddress}\r\n      />\r\n    ) : (\r\n      <Button\r\n        mt=\"8px\"\r\n        width=\"100%\"\r\n        disabled={requestedApproval}\r\n        onClick={handleApprove}\r\n      >\r\n        {TranslateString(758, \"Approve Contract\")}\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Action>\r\n      <Flex>\r\n        <Text\r\n          bold\r\n          textTransform=\"uppercase\"\r\n          color=\"secondary\"\r\n          fontSize=\"12px\"\r\n          pr=\"3px\"\r\n        >\r\n          TREASURE\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {TranslateString(1072, \"Earned\")}\r\n        </Text>\r\n      </Flex>\r\n      <HarvestAction earnings={earnings} farmAddress={getAddress(farm.farmAddress)} index={index} />\r\n      <Flex>\r\n        <Text\r\n          bold\r\n          textTransform=\"uppercase\"\r\n          color=\"secondary\"\r\n          fontSize=\"12px\"\r\n          pr=\"3px\"\r\n        >\r\n          {lpName}\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {TranslateString(1074, \"Staked\")}\r\n        </Text>\r\n      </Flex>\r\n      {!account ? (\r\n        <ConnectWalletButton mt=\"8px\" width=\"100%\" />\r\n      ) : (\r\n        renderApprovalOrStakeButton()\r\n      )}\r\n    </Action>\r\n  );\r\n};\r\n\r\nexport default CardActions;\r\n","import { useCallback } from \"react\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { Contract } from \"web3-eth-contract\";\r\nimport { ethers } from \"ethers\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { updateUserAllowance, fetchFarmUserDataAsync, fetchFarmV2UserDataAsync } from \"state/actions\";\r\nimport { approve } from \"utils/callHelpers\";\r\nimport { useMasterchef, useCake, useSousChef, useLottery } from \"./useContract\";\r\n\r\n// Approve a Farm\r\nexport const useApprove = (lpContract: Contract, farmContract?: Contract) => {\r\n  const dispatch = useDispatch();\r\n  const { account } = useWeb3React();\r\n  const masterChefContract = useMasterchef();\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      let tx: any;\r\n      if (farmContract){\r\n        tx = (await approve(lpContract, farmContract, account));\r\n        dispatch(fetchFarmV2UserDataAsync(account));\r\n      } else {\r\n        tx = await approve(lpContract, masterChefContract, account);\r\n        dispatch(fetchFarmUserDataAsync(account));\r\n      }\r\n      return tx;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  }, [account, dispatch, lpContract, masterChefContract, farmContract]);\r\n\r\n  return { onApprove: handleApprove };\r\n};\r\n\r\n// Approve a Pool\r\nexport const useSousApprove = (lpContract: Contract, sousId) => {\r\n  const dispatch = useDispatch();\r\n  const { account } = useWeb3React();\r\n  const sousChefContract = useSousChef(sousId);\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(lpContract, sousChefContract, account);\r\n      dispatch(updateUserAllowance(sousId, account));\r\n      return tx;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  }, [account, dispatch, lpContract, sousChefContract, sousId]);\r\n\r\n  return { onApprove: handleApprove };\r\n};\r\n\r\n// Approve the lottery\r\nexport const useLotteryApprove = () => {\r\n  const { account } = useWeb3React();\r\n  const cakeContract = useCake();\r\n  const lotteryContract = useLottery();\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      const tx = await approve(cakeContract, lotteryContract, account);\r\n      return tx;\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  }, [account, cakeContract, lotteryContract]);\r\n\r\n  return { onApprove: handleApprove };\r\n};\r\n\r\n// Approve an IFO\r\nexport const useIfoApprove = (\r\n  tokenContract: Contract,\r\n  spenderAddress: string,\r\n) => {\r\n  const { account } = useWeb3React();\r\n  const onApprove = useCallback(async () => {\r\n    const tx = await tokenContract.methods\r\n      .approve(spenderAddress, ethers.constants.MaxUint256)\r\n      .send({ from: account });\r\n    return tx;\r\n  }, [account, spenderAddress, tokenContract]);\r\n\r\n  return onApprove;\r\n};\r\n","const roundToTwoDp = (number) => Math.round(number * 100) / 100\r\n\r\nexport const calculateCakeEarnedPerThousandDollars = ({ numberOfDays, farmApy, cakePrice }) => {\r\n  // Everything here is worked out relative to a year, with the asset compounding daily\r\n  const timesCompounded = 365\r\n  //   We use decimal values rather than % in the math for both APY and the number of days being calculates as a proportion of the year\r\n  const apyAsDecimal = farmApy / 100\r\n  const daysAsDecimalOfYear = numberOfDays / timesCompounded\r\n  //   Calculate the starting CAKE balance with a dollar balance of $1000.\r\n  const principal = 1000 / cakePrice\r\n\r\n  // This is a translation of the typical mathematical compounding APY formula. Details here: https://www.calculatorsoup.com/calculators/financial/compound-interest-calculator.php\r\n  // const finalAmount = principal * (1 + apyAsDecimal / timesCompounded) ** (timesCompounded * daysAsDecimalOfYear)\r\n  \r\n  const finalAmount = principal * (1 + (apyAsDecimal * daysAsDecimalOfYear));\r\n\r\n  // To get the cake earned, deduct the amount after compounding (finalAmount) from the starting CAKE balance (principal)\r\n  const interestEarned = finalAmount - principal\r\n  return roundToTwoDp(interestEarned)\r\n}\r\n\r\nexport const apyModalRoi = ({ amountEarned, amountInvested }) => {\r\n  const percentage = (amountEarned / amountInvested) * 100\r\n  return percentage.toFixed(2)\r\n}\r\n","import React from \"react\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport styled from \"styled-components\";\r\nimport { Modal, Text, LinkExternal, Flex } from \"@pancakeswap-libs/uikit\";\r\nimport useI18n from \"hooks/useI18n\";\r\nimport {\r\n  calculateCakeEarnedPerThousandDollars,\r\n  apyModalRoi,\r\n} from \"utils/compoundApyHelpers\";\r\n\r\ninterface ApyCalculatorModalProps {\r\n  onDismiss?: () => void;\r\n  lpLabel?: string;\r\n  cakePrice?: BigNumber;\r\n  apy?: BigNumber;\r\n  addLiquidityUrl?: string;\r\n}\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n  margin-bottom: 24px;\r\n`;\r\n\r\nconst GridItem = styled.div`\r\n  margin-bottom: \"10px\";\r\n`;\r\n\r\nconst Description = styled(Text)`\r\n  max-width: 320px;\r\n  margin-bottom: 28px;\r\n`;\r\n\r\nconst ApyCalculatorModal: React.FC<ApyCalculatorModalProps> = ({\r\n  onDismiss,\r\n  lpLabel,\r\n  cakePrice,\r\n  apy,\r\n  addLiquidityUrl,\r\n}) => {\r\n  const TranslateString = useI18n();\r\n  const farmApy = apy.times(new BigNumber(100)).toNumber();\r\n  const oneThousandDollarsWorthOfCake = 1000 / cakePrice.toNumber();\r\n\r\n  const cakeEarnedPerThousand1D = calculateCakeEarnedPerThousandDollars({\r\n    numberOfDays: 1,\r\n    farmApy,\r\n    cakePrice,\r\n  });\r\n  const cakeEarnedPerThousand7D = calculateCakeEarnedPerThousandDollars({\r\n    numberOfDays: 7,\r\n    farmApy,\r\n    cakePrice,\r\n  });\r\n  const cakeEarnedPerThousand30D = calculateCakeEarnedPerThousandDollars({\r\n    numberOfDays: 30,\r\n    farmApy,\r\n    cakePrice,\r\n  });\r\n  const cakeEarnedPerThousand365D = calculateCakeEarnedPerThousandDollars({\r\n    numberOfDays: 365,\r\n    farmApy,\r\n    cakePrice,\r\n  });\r\n\r\n\r\n  return (\r\n    <Modal title=\"ROI\" onDismiss={onDismiss}>\r\n      <Grid>\r\n        <GridItem>\r\n          <Text\r\n            fontSize=\"12px\"\r\n            bold\r\n            color=\"textSubtle\"\r\n            textTransform=\"uppercase\"\r\n            mb=\"20px\"\r\n          >\r\n            {TranslateString(860, \"Timeframe\")}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text\r\n            fontSize=\"12px\"\r\n            bold\r\n            color=\"textSubtle\"\r\n            textTransform=\"uppercase\"\r\n            mb=\"20px\"\r\n          >\r\n            {TranslateString(858, \"ROI\")}\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text\r\n            fontSize=\"12px\"\r\n            bold\r\n            color=\"textSubtle\"\r\n            textTransform=\"uppercase\"\r\n            mb=\"20px\"\r\n          >\r\n            {TranslateString(864, \"XPLAY per $1000\")}\r\n          </Text>\r\n        </GridItem>\r\n        {/* 1 day row */}\r\n        <GridItem>\r\n          <Text>1d</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({\r\n              amountEarned: cakeEarnedPerThousand1D,\r\n              amountInvested: oneThousandDollarsWorthOfCake,\r\n            })}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{cakeEarnedPerThousand1D}</Text>\r\n        </GridItem>\r\n        {/* 7 day row */}\r\n        <GridItem>\r\n          <Text>7d</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({\r\n              amountEarned: cakeEarnedPerThousand7D,\r\n              amountInvested: oneThousandDollarsWorthOfCake,\r\n            })}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{cakeEarnedPerThousand7D}</Text>\r\n        </GridItem>\r\n        {/* 30 day row */}\r\n        <GridItem>\r\n          <Text>30d</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({\r\n              amountEarned: cakeEarnedPerThousand30D,\r\n              amountInvested: oneThousandDollarsWorthOfCake,\r\n            })}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{cakeEarnedPerThousand30D}</Text>\r\n        </GridItem>\r\n        {/* 365 day / APY row */}\r\n        <GridItem>\r\n          <Text>365d(APR)</Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>\r\n            {apyModalRoi({\r\n              amountEarned: cakeEarnedPerThousand365D,\r\n              amountInvested: oneThousandDollarsWorthOfCake,\r\n            })}\r\n            %\r\n          </Text>\r\n        </GridItem>\r\n        <GridItem>\r\n          <Text>{cakeEarnedPerThousand365D}</Text>\r\n        </GridItem>\r\n      </Grid>\r\n      <Description fontSize=\"12px\" color=\"textSubtle\">\r\n        {TranslateString(\r\n          866,\r\n          \"Calculated based on current rates. Compounding once daily. Rates are estimates provided for your convenience only, and by no means represent guaranteed returns.\",\r\n        )}\r\n      </Description>\r\n      <Flex justifyContent=\"center\">\r\n        <LinkExternal href={addLiquidityUrl}>\r\n          {TranslateString(999, \"Get\")} {lpLabel}\r\n        </LinkExternal>\r\n      </Flex>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ApyCalculatorModal;\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { IconButton, useModal, CalculateIcon } from '@pancakeswap-libs/uikit'\r\nimport ApyCalculatorModal from './ApyCalculatorModal'\r\n\r\nexport interface ApyButtonProps {\r\n  lpLabel?: string\r\n  cakePrice?: BigNumber\r\n  apy?: BigNumber\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst ApyButton: React.FC<ApyButtonProps> = ({ lpLabel, cakePrice, apy, addLiquidityUrl }) => {\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal lpLabel={lpLabel} cakePrice={cakePrice} apy={apy} addLiquidityUrl={addLiquidityUrl} />,\r\n  )\r\n\r\n  const handleClickButton = (event): void => {\r\n    event.stopPropagation()\r\n    onPresentApyModal()\r\n  }\r\n\r\n  return (\r\n    <IconButton onClick={handleClickButton} variant=\"text\" scale=\"sm\" ml=\"4px\">\r\n      <CalculateIcon width=\"18px\" />\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nexport default ApyButton\r\n","import React, { useMemo, useState } from \"react\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { Flex, Text, Skeleton } from \"@pancakeswap-libs/uikit\";\r\nimport { communityFarms } from \"config/constants\";\r\nimport { FarmV2 } from \"state/types\";\r\nimport { provider as ProviderType } from \"web3-core\";\r\nimport useI18n from \"hooks/useI18n\";\r\nimport ExpandableSectionButton from \"components/ExpandableSectionButton\";\r\nimport { QuoteToken } from \"config/constants/types\";\r\nimport { BASE_ADD_LIQUIDITY_URL } from \"config\";\r\nimport getLiquidityUrlPathParts from \"utils/getLiquidityUrlPathParts\";\r\nimport DetailsSection from \"./DetailsSection\";\r\nimport CardHeading from \"./CardHeading\";\r\nimport CardActionsContainer from \"./CardActionsContainer\";\r\nimport ApyButton from \"./ApyButton\";\r\n\r\nexport interface FarmV2WithStakedValue extends FarmV2 {\r\n  apy?: BigNumber;\r\n  liquidity?: BigNumber;\r\n}\r\n\r\nconst RainbowLight = keyframes`\r\n\t0% {\r\n\t\tbackground-position: 0% 50%;\r\n\t}\r\n\t50% {\r\n\t\tbackground-position: 100% 50%;\r\n\t}\r\n\t100% {\r\n\t\tbackground-position: 0% 50%;\r\n\t}\r\n`;\r\n\r\nconst fadeIn = keyframes`\r\n  0% {\r\n    box-shadow: 0 0 1rem rgb(255 187 0), inset 0 0 2.5rem 0 rgb(255 187 0 / 70%);\r\n  }\r\n  50% {\r\n    box-shadow: 0 0 3rem rgb(255 187 0), inset 0 0 4.5rem 0 rgb(255 187 0 / 80%);\r\n  }\r\n  100% {\r\n    box-shadow: 0 0 1rem rgb(255 187 0), inset 0 0 2.5rem 0 rgb(255 187 0 / 70%);\r\n  }\r\n`;\r\n\r\nconst StyledCardAccent = styled.div`\r\n  /* background: linear-gradient(\r\n    45deg,\r\n    rgba(255, 0, 0, 1) 0%,\r\n    rgba(255, 154, 0, 1) 10%,\r\n    rgba(208, 222, 33, 1) 20%,\r\n    ${({ theme }) => theme.colors.secondary} 30%,\r\n    rgba(63, 218, 216, 1) 40%,\r\n    rgba(47, 201, 226, 1) 50%,\r\n    ${({ theme }) => theme.colors.borderColor}  60%,\r\n    rgba(95, 21, 242, 1) 70%,\r\n    rgba(186, 12, 248, 1) 80%,\r\n    rgba(251, 7, 217, 1) 90%,\r\n    rgba(255, 0, 0, 1) 100%\r\n  );\r\n  background-size: 300% 300%;\r\n  animation: ${RainbowLight} 2s linear infinite; */\r\n  border-radius: 32px;\r\n  position: absolute;\r\n  background: #1999da;\r\n  top: -2px;\r\n  right: -2px;\r\n  bottom: -2px;\r\n  left: -2px;\r\n  z-index: -1;\r\n\r\n  background: rgba(0, 0, 0, 0.65);\r\n  backdrop-filter: blur(5px);\r\n  border: 1px solid ${({ theme }) => theme.colors.borderColor};\r\n  box-shadow: 0 0 1rem rgb(255 187 0), inset 0 0 2.5rem 0 rgb(255 187 0 / 70%);\r\n  animation: ${fadeIn} 1s 1s infinite;\r\n  }\r\n`;\r\n\r\nconst FCard = styled.div`\r\n  align-self: baseline;\r\n  /* background: #1da2e7; */\r\n  /* border-radius: 32px; */\r\n  /* box-shadow: 0px 2px 12px 5px #1da2e7, inset 0px 1px 12px 5px #1da2e7; */\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: 24px;\r\n  position: relative;\r\n  text-align: center;\r\n  min-width: 90vw;\r\n  @media only screen and (min-width: 490px) {\r\n    min-width: 400px;\r\n  }\r\n`;\r\n\r\nconst Divider = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.borderColor};\r\n  height: 1px;\r\n  margin: 28px auto;\r\n  width: 100%;\r\n`;\r\n\r\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\r\n  height: ${(props) => (props.expanded ? \"100%\" : \"0px\")};\r\n  overflow: hidden;\r\n`;\r\n\r\ninterface FarmV2CardProps {\r\n  farm: FarmV2WithStakedValue;\r\n  removed: boolean;\r\n  cakePrice?: BigNumber;\r\n  bnbPrice?: BigNumber;\r\n  provider?: ProviderType;\r\n  account?: string;\r\n}\r\n\r\nconst FarmCard: React.FC<FarmV2CardProps> = ({\r\n  farm,\r\n  removed,\r\n  cakePrice,\r\n  bnbPrice,\r\n  account,\r\n}) => {\r\n  const TranslateString = useI18n();\r\n  const [showExpandableSection, setShowExpandableSection] = useState(false);\r\n\r\n  const isCommunityFarm = communityFarms.includes(farm.tokenSymbol);\r\n\r\n  const farmImage = farm.lpSymbol.split(\" \")[0].toLocaleLowerCase();\r\n\r\n  const totalValue: BigNumber = useMemo(() => {\r\n    if (Number(farm.liquidity)) {\r\n      return farm.liquidity;\r\n    }\r\n    if (!farm.lpTotalInQuoteToken) {\r\n      return null;\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      return bnbPrice.times(farm.lpTotalInQuoteToken);\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n      return cakePrice.times(farm.lpTotalInQuoteToken);\r\n    }\r\n    return farm.lpTotalInQuoteToken;\r\n  }, [\r\n    bnbPrice,\r\n    cakePrice,\r\n    farm.lpTotalInQuoteToken,\r\n    farm.quoteTokenSymbol,\r\n    farm.liquidity,\r\n  ]);\r\n\r\n  const totalValueFormated = totalValue\r\n    ? `$${Number(totalValue).toLocaleString(undefined, {\r\n        maximumFractionDigits: 0,\r\n      })}`\r\n    : \"-\";\r\n\r\n  const lpLabel =\r\n    farm.lpSymbol && farm.lpSymbol.toUpperCase().replace(\"PANCAKE\", \"\");\r\n  const earnLabel = farm.dual ? farm.dual.earnLabel : \"TREASURE\";\r\n\r\n  const farmAPY =\r\n    farm.apy &&\r\n    farm.apy\r\n      .times(new BigNumber(100))\r\n      .toNumber()\r\n      .toLocaleString(\"en-US\", { maximumFractionDigits: 2 });\r\n\r\n  const { quoteTokenAdresses, tokenAddresses } = farm;\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\r\n    quoteTokenAdresses,\r\n    tokenAddresses,\r\n  });\r\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`;\r\n\r\n  return (\r\n    <FCard className=\"FarmCard\">\r\n      <StyledCardAccent />\r\n      <CardHeading\r\n        lpLabel={lpLabel}\r\n        multiplier={farm.multiplier}\r\n        isCommunityFarm={isCommunityFarm}\r\n        farmImage={farmImage}\r\n        tokenSymbol={farm.tokenSymbol}\r\n      />\r\n      {!removed && (\r\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Text>{TranslateString(736, \"APR\")}:</Text>\r\n          <Text bold style={{ display: \"flex\", alignItems: \"center\" }}>\r\n            {farm.apy ? (\r\n              <>\r\n                <ApyButton\r\n                  lpLabel={lpLabel}\r\n                  addLiquidityUrl={addLiquidityUrl}\r\n                  cakePrice={cakePrice}\r\n                  apy={farm.apy}\r\n                />\r\n                {farmAPY}%\r\n              </>\r\n            ) : (\r\n              <Skeleton height={24} width={80} />\r\n            )}\r\n          </Text>\r\n        </Flex>\r\n      )}\r\n      <Flex justifyContent=\"space-between\">\r\n        <Text>{TranslateString(318, \"Earn\")}:</Text>\r\n        <Text bold>{earnLabel}</Text>\r\n      </Flex>\r\n      <CardActionsContainer\r\n        farm={farm}\r\n        account={account}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n      />\r\n      <Divider />\r\n      <ExpandableSectionButton\r\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n        expanded={showExpandableSection}\r\n      />\r\n      <ExpandingWrapper expanded={showExpandableSection}>\r\n        <DetailsSection\r\n          removed={removed}\r\n          bscScanAddress={`https://etherscan.com/address/${\r\n            farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n          }`}\r\n          totalValueFormated={totalValueFormated}\r\n          lpLabel={lpLabel}\r\n          addLiquidityUrl={addLiquidityUrl}\r\n        />\r\n      </ExpandingWrapper>\r\n    </FCard>\r\n  );\r\n};\r\n\r\nexport default FarmCard;\r\n","import React, { useEffect, useCallback, useState, Suspense, lazy } from \"react\";\r\nimport { Route, useRouteMatch, useLocation } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { Image, RowType, Toggle, Text } from \"@pancakeswap-libs/uikit\";\r\nimport styled from \"styled-components\";\r\nimport { BLOCKS_PER_YEAR, CAKE_POOL_PID } from \"config\";\r\nimport FlexLayout from \"components/layout/Flex\";\r\nimport Page from \"components/layout/Page\";\r\nimport Popup from \"components/Popup\";\r\nimport {\r\n  useFarmsV2,\r\n  usePriceBnbBusd,\r\n  usePriceX2PBusd,\r\n  usePriceCakeBusd,\r\n} from \"state/hooks\";\r\nimport useRefresh from \"hooks/useRefresh\";\r\nimport { fetchFarmV2UserDataAsync } from \"state/actions\";\r\nimport { QuoteToken } from \"config/constants/types\";\r\nimport { FarmV2 } from \"state/types\";\r\nimport useI18n from \"hooks/useI18n\";\r\nimport { getBalanceNumber } from \"utils/formatBalance\";\r\nimport { orderBy } from \"lodash\";\r\nimport Heading from \"./Heading\";\r\nimport Nebula from \"./Nebula\";\r\n\r\nimport FarmCard, {\r\n  FarmV2WithStakedValue,\r\n} from \"./components/FarmCard/FarmCard\";\r\nimport FarmTabButtons from \"./components/FarmTabButtons\";\r\nimport SearchInput from \"./components/SearchInput\";\r\nimport ToggleView from \"./components/ToggleView/ToggleView\";\r\nimport { DesktopColumnSchema, ViewMode } from \"./components/types\";\r\nimport Select, { OptionProps } from \"./components/Select/Select\";\r\nimport Divider from \"../Pools/components/Divider\";\r\n\r\nconst ControlContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    padding: 16px 32px;\r\n  }\r\n`;\r\n\r\nconst Hero = styled.div`\r\n  position: relative;\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 85%;\r\n  padding: 18px 0 10px 0;\r\n  ul {\r\n    margin: 0;\r\n    padding: 0;\r\n    list-style-type: none;\r\n    font-size: 16px;\r\n    li {\r\n      margin-bottom: 4px;\r\n    }\r\n  }\r\n  @media (min-width: 576px) {\r\n    flex-direction: row;\r\n    margin: 0;\r\n    max-width: none;\r\n    padding: 48px 0;\r\n  }\r\n  ul {\r\n    margin-bottom: 2rem;\r\n  }\r\n`;\r\nconst ToggleWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 10px;\r\n\r\n  ${Text} {\r\n    margin-left: 8px;\r\n  }\r\n`;\r\n\r\nconst LabelWrapper = styled.div`\r\n  > ${Text} {\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 8px 0px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: auto;\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nconst ViewControls = styled.div`\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n\r\n  > div {\r\n    padding: 8px 0px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    justify-content: flex-start;\r\n    width: auto;\r\n\r\n    > div {\r\n      padding: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nconst FarmVersionLabel = styled.div`\r\n  width: 100%;\r\n  text-align: center;\r\n  color: #fff;\r\n  text-shadow: 0 0 0.1em #ffce00, 0 0 0.2em #ffce00, 0 0 0.4em #ffce00,\r\n    0 0 0.8em #ffce00, 0 0 1.6em #ffce00;\r\n`;\r\n\r\nconst Farms: React.FC = () => {\r\n  const { path } = useRouteMatch();\r\n  const farmsLP = useFarmsV2();\r\n  const cakePrice = usePriceCakeBusd();\r\n  const x2pPrice = usePriceX2PBusd();\r\n  const bnbPrice = usePriceBnbBusd();\r\n  const { account } = useWeb3React();\r\n\r\n  const dispatch = useDispatch();\r\n  const { fastRefresh } = useRefresh();\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchFarmV2UserDataAsync(account));\r\n    }\r\n  }, [account, dispatch, fastRefresh]);\r\n\r\n  const activeFarms = farmsLP;\r\n\r\n  const farmsList = useCallback(\r\n    (farmsToDisplay): FarmV2WithStakedValue[] => {\r\n      const cakePriceVsBNB = new BigNumber(cakePrice.div(bnbPrice));\r\n      const farmsToDisplayWithAPY: FarmV2WithStakedValue[] = farmsToDisplay.map(\r\n        (farm: FarmV2, index: number) => {\r\n          if (!farm.tokenAmount || !farm.lpTotalInQuoteToken) {\r\n            return farm;\r\n          }\r\n          // TODO change this. Cake per block comse from farm.,\r\n          const cakeRewardPerBlock = new BigNumber(farm.rewardTokenPerBlock);\r\n          const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR);\r\n\r\n          // cakePriceInQuote * cakeRewardPerYear / lpTotalInQuoteToken\r\n          const lpTotalInQuoteToken = farm.lpTotalInQuoteToken;\r\n\r\n          let apy = cakePriceVsBNB\r\n            .times(cakeRewardPerYear)\r\n            .div(lpTotalInQuoteToken);\r\n\r\n          if (\r\n            farm.quoteTokenSymbol === QuoteToken.BUSD ||\r\n            farm.quoteTokenSymbol === QuoteToken.UST\r\n          ) {\r\n            apy = cakePriceVsBNB\r\n              .times(cakeRewardPerYear)\r\n              .div(farm.lpTotalInQuoteToken)\r\n              .times(bnbPrice);\r\n          } else if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n            apy = cakeRewardPerYear.div(farm.lpTokenBalanceMC);\r\n          } else if (farm.quoteTokenSymbol === QuoteToken.X2P) {\r\n            apy = cakeRewardPerYear\r\n              .times(cakePrice)\r\n              .div(farm.lpTokenBalanceMC)\r\n              .div(x2pPrice);\r\n          } else if (farm.dual) {\r\n            const cakeApy =\r\n              farm &&\r\n              cakePriceVsBNB\r\n                .times(cakeRewardPerBlock)\r\n                .times(BLOCKS_PER_YEAR)\r\n                .div(farm.lpTotalInQuoteToken);\r\n            const dualApy =\r\n              farm.tokenPriceVsQuote &&\r\n              new BigNumber(farm.tokenPriceVsQuote)\r\n                .times(farm.dual.rewardPerBlock)\r\n                .times(BLOCKS_PER_YEAR)\r\n                .div(farm.lpTotalInQuoteToken);\r\n\r\n            apy = cakeApy && dualApy && cakeApy.plus(dualApy);\r\n          }\r\n\r\n          let liquidity = farm.lpTotalInQuoteToken;\r\n\r\n          if (!farm.lpTotalInQuoteToken) {\r\n            liquidity = null;\r\n          }\r\n          if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n            liquidity = bnbPrice.times(farm.lpTotalInQuoteToken);\r\n          }\r\n          if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n            liquidity = cakePrice.times(farm.lpTokenBalanceMC);\r\n          }\r\n          if (farm.quoteTokenSymbol === QuoteToken.X2P) {\r\n            liquidity = x2pPrice.times(farm.lpTokenBalanceMC);\r\n          }\r\n\r\n          return { ...farm, apy, liquidity };\r\n        },\r\n      );\r\n\r\n      return farmsToDisplayWithAPY;\r\n    },\r\n    [bnbPrice, cakePrice, x2pPrice],\r\n  );\r\n\r\n  const farmsStaked = farmsList(activeFarms);\r\n\r\n  const renderContent = (): JSX.Element => {\r\n    return (\r\n      <div style={{ marginTop: \"2rem\" }}>\r\n        <FlexLayout>\r\n          <Route exact path={`${path}`}>\r\n            {farmsStaked.map((farm) => (\r\n              <FarmCard\r\n                key={farm.lpSymbol}\r\n                farm={farm}\r\n                bnbPrice={bnbPrice}\r\n                cakePrice={cakePrice}\r\n                account={account}\r\n                removed={false}\r\n              />\r\n            ))}\r\n          </Route>\r\n          <Route exact path={`${path}/history`}>\r\n            {farmsStaked.map((farm) => (\r\n              <FarmCard\r\n                key={farm.lpSymbol}\r\n                farm={farm}\r\n                bnbPrice={bnbPrice}\r\n                cakePrice={cakePrice}\r\n                account={account}\r\n                removed\r\n              />\r\n            ))}\r\n          </Route>\r\n        </FlexLayout>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Nebula />\r\n      {/* <Popup/> */}\r\n      <Hero>\r\n        <div>\r\n          <Heading />\r\n        </div>\r\n      </Hero>\r\n      <Page style={{ position: \"relative\" }}>\r\n        {/* <Canvas/> */}\r\n        <ControlContainer>\r\n          <ViewControls>\r\n            <ToggleWrapper />\r\n          </ViewControls>\r\n          <FilterContainer>\r\n            <LabelWrapper />\r\n          </FilterContainer>\r\n        </ControlContainer>\r\n        {renderContent()}\r\n        <FarmVersionLabel>\r\n          <a href=\"/#/farms\">Need help with staking tokens? <u>Visit us in Telegram</u></a>\r\n          <br />\r\n        </FarmVersionLabel>\r\n      </Page>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Farms;\r\n","import BigNumber from 'bignumber.js'\r\n\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\r\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\r\n  return displayBalance.toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\r\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\r\n}\r\n","import BigNumber from \"bignumber.js\";\r\nimport { ethers } from \"ethers\";\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract.methods\r\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\r\n    .send({ from: account });\r\n};\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account) => {\r\n  if (pid === 0) {\r\n    return masterChefContract.methods\r\n      .deposit(\r\n        pid,\r\n        new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(),\r\n      )\r\n      .send({ from: account })\r\n      .on(\"transactionHash\", (tx) => {\r\n        return tx.transactionHash;\r\n      });\r\n  }\r\n  const decimals = pid === 3 ? 9 : 18\r\n\r\n  return masterChefContract.methods\r\n    .deposit(\r\n      pid,\r\n      new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toString(),\r\n    )\r\n    .send({ from: account })\r\n    .on(\"transactionHash\", (tx) => {\r\n      return tx.transactionHash;\r\n    });\r\n};\r\n\r\nexport const stakeV2 = async (farmContract, index, amount, account) => {\r\n  const decimals = index === 3 ? 9 : 18;\r\n  return farmContract.methods\r\n    .stakeTokens(\r\n      new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toString(),\r\n    )\r\n    .send({ from: account })\r\n    .on(\"transactionHash\", (tx) => {\r\n      return tx.transactionHash;\r\n    });\r\n};\r\n\r\n\r\nexport const sousStake = async (\r\n  sousChefContract,\r\n  amount,\r\n  decimals = 18,\r\n  account,\r\n) => {\r\n  return sousChefContract.methods\r\n    .deposit(\r\n      new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toString(),\r\n    )\r\n    .send({ from: account })\r\n    .on(\"transactionHash\", (tx) => {\r\n      return tx.transactionHash;\r\n    });\r\n};\r\n\r\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({\r\n      from: account,\r\n      gas: 200000,\r\n      value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(),\r\n    })\r\n    .on(\"transactionHash\", (tx) => {\r\n      return tx.transactionHash;\r\n    });\r\n};\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  if (amount === '0'){\r\n    return masterChefContract.methods\r\n      .emergencyWithdraw(\r\n        pid,\r\n      )\r\n      .send({ from: account })\r\n      .on(\"transactionHash\", (tx) => {\r\n        return tx.transactionHash;\r\n      });\r\n  }\r\n  if (pid === 0) {\r\n    return masterChefContract.methods\r\n      .withdraw(\r\n        pid,\r\n        new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(),\r\n      )\r\n      .send({ from: account })\r\n      .on(\"transactionHash\", (tx) => {\r\n        return tx.transactionHash;\r\n      });\r\n  }\r\n\r\n  return masterChefContract.methods\r\n    .withdraw(\r\n      pid,\r\n      new BigNumber(amount)\r\n        .times(new BigNumber(10).pow(pid === 3 ? 9 : 18))\r\n        .toString(),\r\n    )\r\n    .send({ from: account })\r\n    .on(\"transactionHash\", (tx) => {\r\n      return tx.transactionHash;\r\n    });\r\n};\r\n\r\n\r\nexport const unstakeV2 = async (farmContract, index, amount, account) => {\r\n  return farmContract.methods\r\n    .unstakeTokens(\r\n      new BigNumber(amount)\r\n        .times(new BigNumber(10).pow(index === 3 ? 9 : 18))\r\n        .toString(), true\r\n    )\r\n    .send({ from: account })\r\n    .on(\"transactionHash\", (tx) => {\r\n      return tx.transactionHash;\r\n    });\r\n};\r\n\r\nexport const sousUnstake = async (\r\n  sousChefContract,\r\n  amount,\r\n  decimals = 18,\r\n  account,\r\n) => {\r\n  // shit code: hard fix for old CTK and BLK\r\n  if (\r\n    sousChefContract.options.address ===\r\n    \"0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC\"\r\n  ) {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on(\"transactionHash\", (tx) => {\r\n        return tx.transactionHash;\r\n      });\r\n  }\r\n  if (\r\n    sousChefContract.options.address ===\r\n    \"0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831\"\r\n  ) {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on(\"transactionHash\", (tx) => {\r\n        return tx.transactionHash;\r\n      });\r\n  }\r\n\r\n  return sousChefContract.methods\r\n    .withdraw(\r\n      new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toString(),\r\n    )\r\n    .send({ from: account })\r\n    .on(\"transactionHash\", (tx) => {\r\n      return tx.transactionHash;\r\n    });\r\n};\r\n\r\nexport const sousEmegencyUnstake = async (\r\n  sousChefContract,\r\n  amount,\r\n  account,\r\n) => {\r\n  return sousChefContract.methods\r\n    .emergencyWithdraw()\r\n    .send({ from: account })\r\n    .on(\"transactionHash\", (tx) => {\r\n      return tx.transactionHash;\r\n    });\r\n};\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, \"0\")\r\n    .send({ from: account })\r\n    .on(\"transactionHash\", (tx) => {\r\n      return tx.transactionHash;\r\n    });\r\n};\r\n\r\nexport const soushHarvest = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit(\"0\")\r\n    .send({ from: account, gas: 200000 })\r\n    .on(\"transactionHash\", (tx) => {\r\n      return tx.transactionHash;\r\n    });\r\n};\r\n\r\nexport const soushHarvestBnb = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, gas: 200000, value: new BigNumber(0) })\r\n    .on(\"transactionHash\", (tx) => {\r\n      return tx.transactionHash;\r\n    });\r\n};\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 1200px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-left: 24px;\r\n    padding-right: 24px;\r\n  }\r\n`\r\n\r\nexport default Container\r\n","import styled from 'styled-components'\r\nimport Container from './Container'\r\n\r\nconst Page = styled(Container)`\r\n  min-height: calc(100vh - 64px);\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 24px;\r\n    padding-bottom: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default Page\r\n","export default __webpack_public_path__ + \"static/media/boxlogo.c68b3846.png\";","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\nexport const CAKE_POOL_PID = 1\nexport const BASE_URL = 'https://babyfarm.netlify.app'\nexport const BASE_EXCHANGE_URL = 'https://app.treasuretoken.finance/'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\n","export default __webpack_public_path__ + \"static/media/hexBg.e607e969.png\";"],"sourceRoot":""}