{"version":3,"sources":["assets/images/treasurecoin.png","hooks/useFarmsWithBalance.ts","components/custom/Card.tsx","hooks/useAllEarnings.ts","views/Home/components/CardValue.tsx","views/Home/components/CakeHarvestBalance.tsx","hooks/useTokenBalance.ts","views/Home/components/CakeWalletBalance.tsx","views/Home/components/FarmStakingCard.tsx","hooks/useHarvest.ts","views/Home/components/CakeStats.tsx","views/Home/components/TotalValueLockedCard.tsx","views/Home/components/EarnAPYCard.tsx","components/custom/Sprites.tsx","components/custom/Landing.tsx","views/Home/Home.tsx","utils/formatBalance.ts","utils/callHelpers.ts","components/layout/Container.tsx","components/layout/Page.tsx","assets/images/boxlogo.png","config/index.ts","assets/images/hexBg.png"],"names":["useFarmsWithBalance","useState","farmsWithBalances","setFarmsWithBalances","account","useWeb3React","fastRefresh","useRefresh","useEffect","fetchBalances","a","calls","farmsConfig","map","farm","address","getMasterChefAddress","name","params","pid","multicall","masterChefABI","rawResults","results","index","balance","BigNumber","Card1","styled","Card","theme","colors","borderColor","useAllEarnings","balances","setBalance","fetchAllBalances","farmsV2Config","getAddress","farmAddress","farmABI","res","console","log","CardValue","value","decimals","fontSize","lineHeight","prefix","bold","color","useCountUp","start","end","duration","separator","undefined","countUp","update","updateValue","useRef","current","style","Block","div","CakeHarvestBalance","TranslateString","useI18n","earningsSum","reduce","accum","earning","pow","toNumber","multipliedBy","usePriceCakeBusd","useTokenBalance","tokenAddress","web3","useWeb3","CakeWalletBalance","cakeBalance","getCakeAddress","getBalanceNumber","StyledFarmStakingCard","BoxLogo","CardImage","img","Label","textSubtle","Actions","FarmedStakingCard","pendingTx","setPendingTx","balancesWithValue","filter","balanceType","farmPids","masterChefContract","useMasterchef","onReward","useCallback","harvestPromises","harvest","Promise","all","useAllHarvest","farmWithBalance","size","mb","src","TreasureCoin","alt","width","height","to","id","length","ConnectWalletButton","StyledCakeStats","Row","CakeStats","totalSupply","slowRefresh","useTotalSupply","burnedBalance","useBurnedBalance","cakeSupply","useFarmCakePerBlock","StyledTotalValueLockedCard","TotalValueLockedCard","farms","useFarmsV2","cakePrice","bnbPrice","usePriceBnbBusd","x2pPrice","usePriceX2PBusd","tvl","forEach","liquidity","lpTotalInQuoteToken","quoteTokenSymbol","QuoteToken","BNB","times","CAKE","lpTokenBalanceMC","X2P","plus","totalValueFormated","Number","toLocaleString","maximumFractionDigits","mediaQueries","lg","CardMidContent","Heading","attrs","EarnAPYCard","farmsLP","maxAPY","MIN_VALUE","getHighestAPY","calculateAPY","slice","farmsToDisplay","cakePriceVsBNB","tokenAmount","cakeRewardPerYear","rewardTokenPerBlock","BLOCKS_PER_YEAR","apy","toString","animation","variant","justifyContent","exact","activeClassName","transform","marginRight","mt","Container","Video","containerRef","ref","options","fullScreen","enable","fpsLimit","particles","groups","z5000","number","zIndex","z7500","z2500","z1000","density","value_area","speed","sync","shape","type","images","Logo","opacity","random","minimumValue","move","angle","offset","direction","straight","outModes","default","attract","rotateX","rotateY","opacityRate","detectRetina","background","image","HexBg","position","repeat","emitters","y","x","rate","delay","quantity","top","rotate","min","max","animateLightBar","keyframes","TextBoxAnimation","TextAnimation","BorderShow","Wrapper","TextBox","H1","h1","LightBar","Landing","videoPlayed","setVideoPlayed","imageLoading","PageLoader","Sprites","Page","CTACards","BaseLayout","sm","Flex","Home","padding","FarmStakingCard","displayBalance","dividedBy","getFullDisplayBalance","toFixed","approve","lpContract","methods","ethers","constants","MaxUint256","send","from","stake","amount","deposit","on","tx","transactionHash","stakeV2","farmContract","stakeTokens","unstake","emergencyWithdraw","withdraw","unstakeV2","unstakeTokens","soushHarvest","sousChefContract","gas","soushHarvestBnb","config","EXPONENTIAL_AT","DECIMAL_PLACES","BASE_EXCHANGE_URL","BASE_ADD_LIQUIDITY_URL"],"mappings":"mSAAe,MAA0B,yC,4HCyC1BA,EA3Ba,WAC1B,MAAkDC,mBAA4B,IAA9E,mBAAOC,EAAP,KAA0BC,EAA1B,KACQC,EAAYC,cAAZD,QACAE,EAAgBC,cAAhBD,YAqBR,OAnBAE,qBAAU,WACR,IAAMC,EAAa,uCAAG,gCAAAC,EAAA,6DACdC,EAAQC,IAAYC,KAAI,SAACC,GAAD,MAAW,CACvCC,QAASC,cACTC,KAAM,qBACNC,OAAQ,CAACJ,EAAKK,IAAKf,OAJD,SAMKgB,YAAUC,EAAeV,GAN9B,OAMdW,EANc,OAQdC,EAAUX,IAAYC,KAAI,SAACC,EAAMU,GAAP,mBAAC,eAAsBV,GAAvB,IAA6BW,QAAS,IAAIC,IAAUJ,EAAWE,SAE/FrB,EAAqBoB,GAVD,2CAAH,qDAafnB,GACFK,MAED,CAACL,EAASE,IAENJ,G,SCzBMyB,EATDC,YAAOC,IAAPD,CAAH,mMAGW,qBAAGE,MAAkBC,OAAOC,eACzB,qBAAGF,MAAkBC,OAAOC,eACtC,qBAAGF,MAAkBC,OAAOC,eACtB,qBAAGF,MAAkBC,OAAOC,e,iBCwBlCC,EA1BQ,WACrB,MAA+BhC,mBAAS,IAAxC,mBAAOiC,EAAP,KAAiBC,EAAjB,KACQ/B,EAAYC,cAAZD,QACAE,EAAgBC,cAAhBD,YAoBR,OAlBAE,qBAAU,WACR,IAAM4B,EAAgB,uCAAG,8BAAA1B,EAAA,6DACjBC,EAAQ0B,IAAcxB,KAAI,SAACC,GAAD,MAAW,CACzCC,QAASuB,YAAWxB,EAAKyB,aACzBtB,KAAM,iBACNC,OAAQ,CAACd,OAJY,SAOLgB,YAAUoB,EAAS7B,GAPd,OAOjB8B,EAPiB,OAQvBC,QAAQC,IAAI,SAAUF,GACtBN,EAAWM,GATY,2CAAH,qDAYlBrC,GACFgC,MAED,CAAChC,EAASE,IAEN4B,G,yBCgBMU,EAjC6B,SAAC,GAQtC,IAPLC,EAOI,EAPJA,MACAC,EAMI,EANJA,SAMI,IALJC,gBAKI,MALO,OAKP,MAJJC,kBAII,MAJS,IAIT,MAHJC,cAGI,MAHK,GAGL,MAFJC,YAEI,aADJC,aACI,MADI,OACJ,EACJ,EAA4BC,qBAAW,CACrCC,MAAO,EACPC,IAAKT,EACLU,SAAU,EACVC,UAAW,IACXV,cAEeW,IAAbX,EAAyBA,EAAWD,EAAQ,EAAI,EAAIA,EAAQ,IAAM,EAAI,IAPlEa,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,OAUXC,EAAcC,iBAAOF,GAM3B,OAJAnD,qBAAU,WACRoD,EAAYE,QAAQjB,KACnB,CAACA,EAAOe,IAGT,eAAC,IAAD,CAAMV,KAAMA,EAAMH,SAAUA,EAAUgB,MAAO,CAAEf,cAAcG,MAAOA,EAApE,UACGF,EACAS,MC/BDM,EAAQpC,IAAOqC,IAAV,uDA8BIC,EAzBY,WACzB,IAAMC,EAAkBC,cAChBhE,EAAYC,cAAZD,QAEFiE,EADcpC,IACYqC,QAAO,SAACC,EAAOC,GAC7C,OAAOD,EAAQ,IAAI7C,IAAU8C,GAASP,IAAI,IAAIvC,IAAU,IAAI+C,IAAI,KAAKC,aACpE,GACkB,IAAIhD,IAAU2C,GAAaM,aAAaC,eAAoBF,WAEjF,OAAKtE,EASH,cAAC4D,EAAD,UACE,cAAC,EAAD,CAAWnB,MAAOwB,EAAarB,WAAW,UAR1C,cAAC,IAAD,CAAMG,MAAM,eAAeY,MAAO,CAAEf,WAAY,QAAhD,SACGmB,EAAgB,IAAK,6B,gBCoCfU,GAzDS,SAACC,GACvB,MAA8B7E,mBAAS,IAAIyB,IAAU,IAArD,mBAAOD,EAAP,KACQrB,GADR,KACoBC,cAAZD,SACF2E,EAAOC,cACL1E,EAAgBC,cAAhBD,YAeR,OAbAE,qBAAU,cAWP,CAACJ,EAAS0E,EAAcC,EAAMzE,IAE1BmB,G,UCOMwD,GArBW,WACxB,IAAMd,EAAkBC,cAClBc,EAAcL,GAAgBM,eAChB,IAAIzD,YAAU0D,aAAiBF,IAAcP,aAAaC,eAAoBF,WAElG,OADoBrE,cAAZD,QAUN,mCACE,cAAC,EAAD,CAAWyC,MAAOuC,aAAiBF,GAAcpC,SAAU,EAAGC,SAAS,OAAOC,WAAW,WARzF,cAAC,IAAD,CAAMG,MAAM,eAAeY,MAAO,CAAEf,WAAY,QAAhD,SACGmB,EAAgB,IAAK,6BCHxBkB,GAAwBzD,YAAOC,EAAPD,CAAH,uKACL0D,KAOhBtB,GAAQpC,IAAOqC,IAAV,oDAILsB,GAAY3D,IAAO4D,IAAV,oGAMTC,GAAQ7D,IAAOqC,IAAV,+DACA,qBAAGnC,MAAkBC,OAAO2D,cAIjCC,GAAU/D,IAAOqC,IAAV,iDAqEE2B,GAjEW,WACxB,MAAkC3F,oBAAS,GAA3C,mBAAO4F,EAAP,KAAkBC,EAAlB,KACQ1F,EAAYC,cAAZD,QACF+D,EAAkBC,cAElB2B,EADmB/F,IACkBgG,QACzC,SAACC,GAAD,OAAiBA,EAAYxE,QAAQiD,WAAa,KAGpD,EChC2B,SAACwB,GAC5B,IAAQ9F,EAAYC,cAAZD,QACF+F,EAAqBC,cAU3B,MAAO,CAAEC,SARaC,sBAAW,sBAAC,4BAAA5F,EAAA,6DAC1B6F,EAAkBL,EAAS5B,QAAO,SAACC,EAAOpD,GAC9C,MAAM,GAAN,mBAAWoD,GAAX,CAAkBiC,YAAQL,EAAoBhF,EAAKf,OAClD,IAH6B,kBAKzBqG,QAAQC,IAAIH,IALa,2CAM/B,CAACnG,EAAS8F,EAAUC,KDsBFQ,CACnBZ,EAAkBlF,KAAI,SAAC+F,GAAD,OAAqBA,EAAgBzF,QADrDkF,EAAR,EAAQA,SAIgBC,sBAAW,sBAAC,sBAAA5F,EAAA,6DAClCoF,GAAa,GADqB,kBAG1BO,IAH0B,6EAOhCP,GAAa,GAPmB,0EASjC,CAACO,IAEJ,OACE,cAAChB,GAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAASwB,KAAK,KAAKC,GAAG,OAAtB,SACG3C,EAAgB,IAAK,kBAExB,cAACoB,GAAD,CAAWwB,IAAKC,EAAcC,IAAI,OAAOC,MAAO,GAAIC,OAAQ,KAC5D,eAAC,GAAD,WACE,eAAC1B,GAAD,WAAQtB,EAAgB,IAAK,uBAA7B,OACA,cAAC,EAAD,OAEF,eAAC,GAAD,WACE,eAACsB,GAAD,WAAQtB,EAAgB,IAAK,sBAA7B,OACA,cAAC,GAAD,OAEF,cAACwB,GAAD,UACGvF,EACC,cAAC,IAAD,CAAMgH,GAAG,SAAT,SACE,cAAC,IAAD,CACEC,GAAG,cAGHH,MAAM,OAJR,SAMGrB,EACG1B,EAAgB,IAAK,oBACrBA,EACE,IADa,uBAEG4B,EAAkBuB,OAFrB,UAOvB,cAACC,EAAA,EAAD,CAAqBL,MAAM,iBEtFjCM,GAAkB5F,YAAOC,EAAPD,CAAH,yEAKf6F,GAAM7F,IAAOqC,IAAV,oJAiCMyD,GAzBG,WAChB,IAAMvD,EAAkBC,cAClBuD,EJDsB,WAC5B,IAAQC,EAAgBrH,cAAhBqH,YACR,EAAsC3H,qBAAtC,mBAAO0H,EAAP,KAYA,OAZA,KAEAnH,qBAAU,cAQP,CAACoH,IAEGD,EIbaE,GACdC,EAAgB1C,aJeQ,SAACN,GAC/B,MAA8B7E,mBAAS,IAAIyB,IAAU,IAArD,mBAAOD,EAAP,KACQmG,GADR,KACwBrH,cAAhBqH,aACF7C,EAAOC,cAYb,OAVAxE,qBAAU,cAQP,CAACuE,EAAMD,EAAc8C,IAEjBnG,EI9BgCsG,CAAiB5C,gBAClD6C,EAAaL,EAAcvC,aAAiBuC,GAAeG,EAAgB,EAC1DG,cACvB,OACE,cAACT,GAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAASX,KAAK,KAAKC,GAAG,OAAtB,SACG3C,EAAgB,IAAK,oBAExB,eAACsD,GAAD,WACE,cAAC,IAAD,CAAM1E,SAAS,OAAf,SAAuBoB,EAAgB,IAAK,2BAC3C6D,GAAc,cAAC,EAAD,CAAWjF,SAAS,OAAOF,MAAOmF,OAEnD,eAACP,GAAD,WACE,cAAC,IAAD,CAAM1E,SAAS,OAAf,SAAuBoB,EAAgB,IAAK,2BAC5C,cAAC,EAAD,CAAWpB,SAAS,OAAOD,SAAU,EAAGD,MAAOiF,a,SC/BnDI,GAA6BtG,YAAOC,EAAPD,CAAH,kFA6DjBuG,GAvDc,WAC3B,IAAMhE,EAAkBC,cAClBgE,EAAQC,cACRC,EAAY1D,cACZ2D,EAAWC,cACXC,EAAWC,cACbC,EAAM,IAAIjH,IAAU,GACxB0G,EAAMQ,SAAQ,SAAC9H,GACb,IAAI+H,EAAY/H,EAAKgI,oBAChBhI,EAAKgI,sBACRD,EAAY,IAAInH,IAAU,IAExBZ,EAAKiI,mBAAqBC,KAAWC,MACvCJ,EAAYN,EAASW,MAAMpI,EAAKgI,sBAE9BhI,EAAKiI,mBAAqBC,KAAWG,OACvCN,EAAYP,EAAUY,MAAMpI,EAAKsI,mBAE/BtI,EAAKiI,mBAAqBC,KAAWK,MACvCR,EAAYJ,EAASS,MAAMpI,EAAKsI,mBAElCT,EAAMA,EAAIW,KAAKT,MAGjB,IAAMU,EAAqBZ,GAAOa,OAAOb,GAAd,UACpBa,OAAOb,GAAKc,oBAAehG,EAAW,CAAEiG,sBAAuB,KAClE,MAEJ,OACE,cAACxB,GAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAASrB,KAAK,KAAKC,GAAG,OAAtB,SACG3C,EAAgB,IAAK,8BAEvBwE,EACC,qCACE,cAAC,IAAD,CAAS9B,KAAK,KAAd,oBAAwB0C,KACxB,uBACA,cAAC,IAAD,CAAMpG,MAAM,aAAZ,SACGgB,EACC,IACA,qEAKN,mCACE,cAAC,IAAD,CAAUgD,OAAQ,a,UC5CxB9B,GAAwBzD,YAAOC,EAAPD,CAAH,0ZAIL0D,KAWlB,qBAAGxD,MAAkB6H,aAAaC,MAKhCC,GAAiBjI,YAAOkI,KAASC,MAAM,CAAElD,KAAM,MAA9BjF,CAAH,kDAuFLoI,GApFK,WACM5F,cAAxB,IACM6F,EAAU5B,cACVE,EAAWC,cAEXF,EAAY1D,cACZ6D,EAAWC,cAEXwB,EAASrG,iBAAO2F,OAAOW,WAEvBC,EAAgB,WAEpB,OADAC,EAAaJ,IACY,IAAjBC,EAAOpG,SAAe2F,eAAe,SAASa,MAAM,GAAI,IAG5DD,EAAe/D,uBACnB,SAACiE,GACC,IAAMC,EAAiB,IAAI9I,IAAU4G,EAAUrE,IAAIsE,IAEnDgC,EAAe1J,KAAI,SAACC,GAClB,IACGA,EAAK2J,cACL3J,EAAKgI,sBACLhI,EAAKgI,oBAEN,OAAOhI,EAET,IACM4J,EADqB,IAAIhJ,IAAUZ,EAAK6J,qBACDzB,MAAM0B,MAE/CC,EAAML,EACPtB,MAAMwB,GACNzG,IAAInD,EAAKgI,qBAoBZ,OAlBIhI,EAAKiI,mBAAqBC,KAAWG,MACvC0B,EAAMH,EAAkBzG,IAAInD,EAAKsI,kBACjC1G,QAAQC,IACN,aACAkI,EAAIC,WACJJ,EAAkBI,WAClBhK,EAAKsI,mBAEEtI,EAAKiI,mBAAqBC,KAAWK,MAC9CwB,EAAMH,EACHxB,MAAMZ,GACNrE,IAAInD,EAAKsI,kBACTnF,IAAIwE,GACP/F,QAAQC,IAAI,WAAYkI,EAAIC,aAG1BZ,EAAOpG,QAAU+G,EAAInG,aAAYwF,EAAOpG,QAAU+G,EAAInG,YAEnDmG,OAGX,CAACtC,EAAUE,EAAUH,IAGvB,OACE,cAAC,GAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAASnF,MAAM,WAAW0D,KAAK,KAA/B,wBAGA,cAACgD,GAAD,CAAgB1G,MAAM,UAAtB,SACGiH,IAAa,UACTA,IADS,SAGZ,cAAC,IAAD,CAAUW,UAAU,QAAQC,QAAQ,OAAO7D,OAAO,WAGtD,eAAC,IAAD,CAAM8D,eAAe,gBAArB,UACE,cAAC,IAAD,CAAS9H,MAAM,WAAW0D,KAAK,KAA/B,wBAGA,cAAC,IAAD,CAASqE,OAAK,EAACC,gBAAgB,SAAS/D,GAAG,SAASC,GAAG,eAAvD,SACE,cAAC,IAAD,CAAkB+D,UAAU,aAAaC,YAAY,OAAOC,GAAI,IAAKnI,MAAM,uB,oDCnHjFoI,GAAY3J,IAAOqC,IAAV,2JA4NAuH,I,2BAAAA,GAlNf,WACE,IAAMC,EAAe5H,iBAAO,MAE5B,OACE,mCACE,cAAC0H,GAAD,CAAWG,IAAKD,EAAhB,SACE,cAAC,KAAD,CACEpE,GAAG,cACHsE,QAAS,CACPC,WAAY,CACVC,QAAQ,GAEVC,SAAU,GACVC,UAAW,CACTC,OAAQ,CACNC,MAAO,CACLC,OAAQ,CACNrJ,MAAO,IAETsJ,OAAQ,CACNtJ,MAAO,MAGXuJ,MAAO,CACLF,OAAQ,CACNrJ,MAAO,IAETsJ,OAAQ,CACNtJ,MAAO,KAGXwJ,MAAO,CACLH,OAAQ,CACNrJ,MAAO,IAETsJ,OAAQ,CACNtJ,MAAO,KAGXyJ,MAAO,CACLJ,OAAQ,CACNrJ,MAAO,IAETsJ,OAAQ,CACNtJ,MAAO,MAIbqJ,OAAQ,CACNrJ,MAAO,IACP0J,QAAS,CACPV,QAAQ,EACRW,WAAY,MAGhBrJ,MAAO,CACLN,MAAO,UACPkI,UAAW,CACTc,QAAQ,EACRY,MAAO,GACPC,MAAM,IAGVC,MAAO,CACLC,KAAM,QACNjB,QAAS,CACPkB,OAAQ,CAAC,CAAE9F,IAAK+F,KAAM5F,MAAO,IAAKC,OAAQ,QAG9C4F,QAAS,CACPlK,MAAO,EACPmK,QAAQ,EACRjC,UAAW,CACTc,QAAQ,EACRY,MAAO,EACPQ,aAAc,GACdP,MAAM,IAGV7F,KAAM,CACJhE,MAAO,IAETqK,KAAM,CACJC,MAAO,CACLtK,MAAO,GACPuK,OAAQ,GAEVvB,QAAQ,EACRY,MAAO,EACPY,UAAW,MACXL,QAAQ,EACRM,UAAU,EACVC,SAAU,CACRC,QAAS,OAEXC,QAAS,CACP5B,QAAQ,EACR6B,QAAS,IACTC,QAAS,OAGbxB,OAAQ,CACNtJ,MAAO,EACP+K,YAAa,KAGjBC,cAAc,EACdC,WAAY,CAEVC,MAAOC,KACPC,SAAU,UACVC,OAAQ,YACRrH,KAAM,QACNkG,QAAS,IAEXoB,SAAU,CACRF,SAAU,CACRG,EAAG,IACHC,EAAG,IAELC,KAAM,CACJC,MAAO,EACPC,SAAU,GAEZ3H,KAAM,CACJK,MAAO,EACPC,OAAQ,GAEV4E,UAAW,CACTY,MAAO,CACLC,KAAM,SACNjB,QAAS,CACPkB,OAAQ,CACN,CACE9F,IAAKC,EACLE,MAAO,IACPC,OAAQ,KAEV,CACEJ,IAAKC,EACLE,MAAO,IACPC,OAAQ,KAEV,CACEJ,IAAKC,EACLE,MAAO,IACPC,OAAQ,QA8BhBN,KAAM,CACJhE,MAAO,IAETqK,KAAM,CACJT,MAAO,GACPc,SAAU,CACRC,QAAS,SACTiB,IAAK,WAEPnB,UAAU,GAEZnB,OAAQ,CACNtJ,MAAO,GAET6L,OAAQ,CACN7L,MAAO,CACL8L,IAAK,EACLC,IAAK,KAEP7D,UAAW,CACTc,QAAQ,EACRY,MAAO,GACPC,MAAM,cCjNpBmC,GAAkBC,YAAH,4NAcfC,GAAmBD,YAAH,uQAchBE,GAAgBF,YAAH,uQAcbG,GAAaH,YAAH,yIAYVvD,GAAY3J,IAAOqC,IAAV,qJAOTiL,GAAUtN,IAAOqC,IAAV,yvBAmBIgL,IAcXE,GAAUvN,IAAOqC,IAAV,uKAIE8K,IAGTK,GAAKxN,IAAOyN,GAAV,4TAQOL,IAETM,GAAW1N,IAAOqC,IAAV,oUAWC4K,IAyBAU,I,eAAAA,GAtBf,YAAmD,IAAhCC,EAA+B,EAA/BA,YACjB,GADgD,EAAlBC,eACUxP,oBAAS,IAAjD,mBAAOyP,EAAP,KACA,GADA,KACwCzP,oBAAS,IAAjD,mBACA,GADA,UACwCA,mBAASuP,IAAjD,mBACA,OADA,UAEE,eAAC,GAAD,WACGE,EACC,cAACC,GAAA,EAAD,IAGI,cAACT,GAAD,UACE,eAACC,GAAD,WACE,eAACC,GAAD,uBAAa,uBAAb,UACA,cAACE,GAAD,SAIV,cAACM,GAAD,QCpIArE,GAAY3J,YAAOiO,IAAPjO,CAAH,6FACSoM,MAsClB8B,IAlCOlO,IAAOqC,IAAV,iMAWIrC,YAAOmO,IAAPnO,CAAH,gTAUP,qBAAGE,MAAkB6H,aAAaqG,MAMlC,qBAAGlO,MAAkB6H,aAAaC,MAOrBhI,YAAOmO,IAAPnO,CAAH,+PAQV,qBAAGE,MAAkB6H,aAAaqG,MAMlC,qBAAGlO,MAAkB6H,aAAaC,OAOhCqG,GAAOrO,IAAOqC,IAAV,4XAiDKiM,GA9BF,SAAC,GAAoC,IAAlCV,EAAiC,EAAjCA,YAAYC,EAAqB,EAArBA,eACFrL,cAExB,OACE,eAAC,GAAD,WAKE,cAAC,GAAD,CAASoL,YAAaA,EAAaC,eAAgBA,IACnD,sBAAK1L,MAAO,CAAEoM,QAAS,aAAvB,UACE,eAACF,GAAD,WACE,cAAC,GAAD,IACA,cAACG,GAAD,OAIF,cAACN,GAAD,IAIA,eAACG,GAAD,WACE,cAAC,GAAD,IACA,cAAC,GAAD,e,iCCvHV,yFAEa7K,EAAmB,SAAC3D,GAAuC,IAAnBqB,EAAkB,uDAAP,GACxDuN,EAAiB,IAAI3O,IAAUD,GAAS6O,UAAU,IAAI5O,IAAU,IAAI+C,IAAI3B,IAC9E,OAAOuN,EAAe3L,YAGX6L,EAAwB,SAAC9O,GAAuC,IAAnBqB,EAAkB,uDAAP,GACnE,OAAOrB,EAAQ6O,UAAU,IAAI5O,IAAU,IAAI+C,IAAI3B,IAAW0N,Y,sWCL/CC,EAAO,uCAAG,WAAOC,EAAYvK,EAAoB/F,GAAvC,SAAAM,EAAA,+EACdgQ,EAAWC,QACfF,QAAQtK,EAAmBwF,QAAQ5K,QAAS6P,IAAOC,UAAUC,YAC7DC,KAAK,CAAEC,KAAM5Q,KAHK,2CAAH,0DAMP6Q,EAAK,uCAAG,WAAO9K,EAAoBhF,EAAK+P,EAAQ9Q,GAAxC,eAAAM,EAAA,yDACP,IAARS,EADe,yCAEVgF,EAAmBwK,QACvBQ,QACChQ,EACA,IAAIO,IAAUwP,GAAQhI,MAAM,IAAIxH,IAAU,IAAI+C,IAAI,KAAKqG,YAExDiG,KAAK,CAAEC,KAAM5Q,IACbgR,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBATG,cAYbxO,EAAmB,IAAR3B,EAAY,EAAI,GAZd,kBAcZgF,EAAmBwK,QACvBQ,QACChQ,EACA,IAAIO,IAAUwP,GAAQhI,MAAM,IAAIxH,IAAU,IAAI+C,IAAI3B,IAAWgI,YAE9DiG,KAAK,CAAEC,KAAM5Q,IACbgR,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBArBK,2CAAH,4DAyBLC,EAAO,uCAAG,WAAOC,EAAchQ,EAAO0P,EAAQ9Q,GAApC,eAAAM,EAAA,6DACfoC,EAAqB,IAAVtB,EAAc,EAAI,GADd,kBAEdgQ,EAAab,QACjBc,YACC,IAAI/P,IAAUwP,GAAQhI,MAAM,IAAIxH,IAAU,IAAI+C,IAAI3B,IAAWgI,YAE9DiG,KAAK,CAAEC,KAAM5Q,IACbgR,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBARO,2CAAH,4DA0CPI,EAAO,uCAAG,WAAOvL,EAAoBhF,EAAK+P,EAAQ9Q,GAAxC,SAAAM,EAAA,yDACN,MAAXwQ,EADiB,yCAEZ/K,EAAmBwK,QACvBgB,kBACCxQ,GAED4P,KAAK,CAAEC,KAAM5Q,IACbgR,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBARK,UAWT,IAARnQ,EAXiB,yCAYZgF,EAAmBwK,QACvBiB,SACCzQ,EACA,IAAIO,IAAUwP,GAAQhI,MAAM,IAAIxH,IAAU,IAAI+C,IAAI,KAAKqG,YAExDiG,KAAK,CAAEC,KAAM5Q,IACbgR,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBAnBK,gCAuBdnL,EAAmBwK,QACvBiB,SACCzQ,EACA,IAAIO,IAAUwP,GACXhI,MAAM,IAAIxH,IAAU,IAAI+C,IAAY,IAARtD,EAAY,EAAI,KAC5C2J,YAEJiG,KAAK,CAAEC,KAAM5Q,IACbgR,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBAhCO,2CAAH,4DAqCPO,EAAS,uCAAG,WAAOL,EAAchQ,EAAO0P,EAAQ9Q,GAApC,SAAAM,EAAA,+EAChB8Q,EAAab,QACjBmB,cACC,IAAIpQ,IAAUwP,GACXhI,MAAM,IAAIxH,IAAU,IAAI+C,IAAc,IAAVjD,EAAc,EAAI,KAC9CsJ,YAAY,GAEhBiG,KAAK,CAAEC,KAAM5Q,IACbgR,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBATS,2CAAH,4DAkET9K,EAAO,uCAAG,WAAOL,EAAoBhF,EAAKf,GAAhC,SAAAM,EAAA,+EACdyF,EAAmBwK,QACvBQ,QAAQhQ,EAAK,KACb4P,KAAK,CAAEC,KAAM5Q,IACbgR,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBALO,2CAAH,0DASPS,EAAY,uCAAG,WAAOC,EAAkB5R,GAAzB,SAAAM,EAAA,+EACnBsR,EAAiBrB,QACrBQ,QAAQ,KACRJ,KAAK,CAAEC,KAAM5Q,EAAS6R,IAAK,MAC3Bb,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBALY,2CAAH,wDASZY,EAAe,uCAAG,WAAOF,EAAkB5R,GAAzB,SAAAM,EAAA,+EACtBsR,EAAiBrB,QACrBQ,UACAJ,KAAK,CAAEC,KAAM5Q,EAAS6R,IAAK,IAAQpP,MAAO,IAAInB,IAAU,KACxD0P,GAAG,mBAAmB,SAACC,GACtB,OAAOA,EAAGC,oBALe,2CAAH,yD,wDCtLb/F,EAbG3J,IAAOqC,IAAV,iNAOX,qBAAGnC,MAAkB6H,aAAaqG,MCNhCH,EAAOjO,YAAO2J,EAAP3J,CAAH,oPAKN,qBAAGE,MAAkB6H,aAAaqG,MAKlC,qBAAGlO,MAAkB6H,aAAaC,MAMvBiG,O,iCCnBA,QAA0B,qC,iCCAzC,iFAEAnO,IAAUyQ,OAAO,CACfC,eAAgB,IAChBC,eAAgB,KAGX,IAAMzH,EAAkB,IAAIlJ,IAAU,SAIhC4Q,EAAoB,qCACpBC,EAAsB,UAAMD,EAAN,UACC,UAAMA,EAAN,Y,iCCbrB,QAA0B","file":"static/js/7.b4afa1c0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/treasurecoin.c4b2404d.png\";","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport { farmsConfig } from 'config/constants'\r\nimport { FarmConfig } from 'config/constants/types'\r\nimport useRefresh from './useRefresh'\r\n\r\nexport interface FarmWithBalance extends FarmConfig {\r\n  balance: BigNumber\r\n}\r\n\r\nconst useFarmsWithBalance = () => {\r\n  const [farmsWithBalances, setFarmsWithBalances] = useState<FarmWithBalance[]>([])\r\n  const { account } = useWeb3React()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalances = async () => {\r\n      const calls = farmsConfig.map((farm) => ({\r\n        address: getMasterChefAddress(),\r\n        name: 'pendingRewardToken',\r\n        params: [farm.pid, account],\r\n      }))\r\n      const rawResults = await multicall(masterChefABI, calls)\r\n\r\n      const results = farmsConfig.map((farm, index) => ({ ...farm, balance: new BigNumber(rawResults[index]) }))\r\n\r\n      setFarmsWithBalances(results)\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalances()\r\n    }\r\n  }, [account, fastRefresh])\r\n\r\n  return farmsWithBalances\r\n}\r\n\r\nexport default useFarmsWithBalance\r\n","import React from \"react\";\nimport { Heading, Card, CardBody, Button } from \"@pancakeswap-libs/uikit\";\nimport styled from \"styled-components\";\n\nconst Card1 = styled(Card)`\n  background: rgb(150 87 20 / 35%);\n  backdrop-filter: blur(2px);\n  border: 1px solid ${({ theme }) => theme.colors.borderColor};\n  box-shadow: 0 0 2rem ${({ theme }) => theme.colors.borderColor},\n    0 0 2rem ${({ theme }) => theme.colors.borderColor},\n    inset 0 0 2rem ${({ theme }) => theme.colors.borderColor};\n`;\n\nexport default Card1;\n","import { useEffect, useState } from \"react\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport multicall from \"utils/multicall\";\r\nimport farmABI from \"config/abi/farmV2.json\";\r\nimport { farmsV2Config } from \"config/constants/farms\";\r\nimport { getAddress } from \"utils/addressHelpers\";\r\nimport useRefresh from \"./useRefresh\";\r\n\r\nconst useAllEarnings = () => {\r\n  const [balances, setBalance] = useState([]);\r\n  const { account } = useWeb3React();\r\n  const { fastRefresh } = useRefresh();\r\n\r\n  useEffect(() => {\r\n    const fetchAllBalances = async () => {\r\n      const calls = farmsV2Config.map((farm) => ({\r\n        address: getAddress(farm.farmAddress),\r\n        name: \"calcHarvestTot\",\r\n        params: [account],\r\n      }));\r\n\r\n      const res = await multicall(farmABI, calls);\r\n      console.log('res is', res);\r\n      setBalance(res);\r\n    };\r\n\r\n    if (account) {\r\n      fetchAllBalances();\r\n    }\r\n  }, [account, fastRefresh]);\r\n\r\n  return balances;\r\n};\r\n\r\nexport default useAllEarnings;\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useCountUp } from 'react-countup'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\n\r\nexport interface CardValueProps {\r\n  value: number\r\n  decimals?: number\r\n  fontSize?: string\r\n  lineHeight?: string\r\n  prefix?: string\r\n  bold?: boolean\r\n  color?: string\r\n}\r\n\r\nconst CardValue: React.FC<CardValueProps> = ({\r\n  value,\r\n  decimals,\r\n  fontSize = '40px',\r\n  lineHeight = '1',\r\n  prefix = '',\r\n  bold = true,\r\n  color = 'text',\r\n}) => {\r\n  const { countUp, update } = useCountUp({\r\n    start: 0,\r\n    end: value,\r\n    duration: 1,\r\n    separator: ',',\r\n    decimals:\r\n      // eslint-disable-next-line no-nested-ternary\r\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\r\n  })\r\n\r\n  const updateValue = useRef(update)\r\n\r\n  useEffect(() => {\r\n    updateValue.current(value)\r\n  }, [value, updateValue])\r\n\r\n  return (\r\n    <Text bold={bold} fontSize={fontSize} style={{ lineHeight }} color={color}>\r\n      {prefix}\r\n      {countUp}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default CardValue\r\n","import React from 'react'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport BigNumber from 'bignumber.js'\r\nimport useI18n from 'hooks/useI18n'\r\nimport useAllEarnings from 'hooks/useAllEarnings'\r\nimport { usePriceCakeBusd } from 'state/hooks'\r\nimport styled from 'styled-components'\r\nimport CardValue from './CardValue'\r\nimport CardBusdValue from './CardBusdValue'\r\n\r\nconst Block = styled.div`\r\n  margin-bottom: 24px;\r\n}\r\n`\r\n\r\nconst CakeHarvestBalance = () => {\r\n  const TranslateString = useI18n()\r\n  const { account } = useWeb3React()\r\n  const allEarnings = useAllEarnings()\r\n  const earningsSum = allEarnings.reduce((accum, earning) => {\r\n    return accum + new BigNumber(earning).div(new BigNumber(10).pow(18)).toNumber()\r\n  }, 0)\r\n  const earningsBusd = new BigNumber(earningsSum).multipliedBy(usePriceCakeBusd()).toNumber()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Text color=\"textDisabled\" style={{ lineHeight: '76px' }}>\r\n        {TranslateString(298, 'Connect wallet to view')}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Block>\r\n      <CardValue value={earningsSum} lineHeight=\"1.5\" />\r\n      {/* <CardBusdValue value={earningsBusd} /> */}\r\n    </Block>\r\n  )\r\n}\r\n\r\nexport default CakeHarvestBalance\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { getBep20Contract, getCakeContract } from 'utils/contractHelpers'\r\nimport useWeb3 from './useWeb3'\r\nimport useRefresh from './useRefresh'\r\n\r\nconst useTokenBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { account } = useWeb3React()\r\n  const web3 = useWeb3()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf(account).call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n\r\n    if (account) {\r\n      // TOBY TODO FIX THIS\r\n      // fetchBalance()\r\n    }\r\n  }, [account, tokenAddress, web3, fastRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport const useTotalSupply = () => {\r\n  const { slowRefresh } = useRefresh()\r\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\r\n\r\n  useEffect(() => {\r\n    async function fetchTotalSupply() {\r\n      const cakeContract = getCakeContract()\r\n      const supply = await cakeContract.methods.totalSupply().call()\r\n      setTotalSupply(new BigNumber(supply))\r\n    }\r\n    // TOBY TODO FIX THIS\r\n    // fetchTotalSupply()\r\n  }, [slowRefresh])\r\n\r\n  return totalSupply\r\n}\r\n\r\nexport const useBurnedBalance = (tokenAddress: string) => {\r\n  const [balance, setBalance] = useState(new BigNumber(0))\r\n  const { slowRefresh } = useRefresh()\r\n  const web3 = useWeb3()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const contract = getBep20Contract(tokenAddress, web3)\r\n      const res = await contract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\r\n      setBalance(new BigNumber(res))\r\n    }\r\n    // TOBY TODO FIX THIS\r\n    // fetchBalance()\r\n  }, [web3, tokenAddress, slowRefresh])\r\n\r\n  return balance\r\n}\r\n\r\nexport default useTokenBalance\r\n","import React from 'react'\r\nimport { Text } from '@pancakeswap-libs/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useTokenBalance from 'hooks/useTokenBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { usePriceCakeBusd } from 'state/hooks'\r\nimport { BigNumber } from 'bignumber.js'\r\nimport CardValue from './CardValue'\r\nimport CardBusdValue from './CardBusdValue'\r\n\r\nconst CakeWalletBalance = () => {\r\n  const TranslateString = useI18n()\r\n  const cakeBalance = useTokenBalance(getCakeAddress())\r\n  const busdBalance = new BigNumber(getBalanceNumber(cakeBalance)).multipliedBy(usePriceCakeBusd()).toNumber()\r\n  const { account } = useWeb3React()\r\n  if (!account) {\r\n    return (\r\n      <Text color=\"textDisabled\" style={{ lineHeight: '54px' }}>\r\n        {TranslateString(298, 'Connect wallet to view')}\r\n      </Text>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CardValue value={getBalanceNumber(cakeBalance)} decimals={4} fontSize=\"24px\" lineHeight=\"36px\" />\r\n      {/* <CardBusdValue value={busdBalance} /> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CakeWalletBalance\r\n","\r\nimport React, { useState, useCallback } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BoxLogo from 'assets/images/boxlogo.png'\r\nimport TreasureCoin from 'assets/images/treasurecoin.png'\r\nimport { Heading, CardBody, Button } from \"@pancakeswap-libs/uikit\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport useI18n from \"hooks/useI18n\";\r\nimport { useAllHarvest } from \"hooks/useHarvest\";\r\nimport useFarmsWithBalance from \"hooks/useFarmsWithBalance\";\r\nimport ConnectWalletButton from \"components/ConnectWalletButton\";\r\nimport Card from \"components/custom/Card\";\r\nimport CakeHarvestBalance from \"./CakeHarvestBalance\";\r\nimport CakeWalletBalance from \"./CakeWalletBalance\";\r\n\r\n\r\nconst StyledFarmStakingCard = styled(Card)`\r\n  background-image: ${BoxLogo});\r\n  background-repeat: no-repeat;\r\n  background-size: 30%;\r\n  background-position: 80% 50%;\r\n  min-height: 376px;\r\n`;\r\n\r\nconst Block = styled.div`\r\n  margin-bottom: 16px;\r\n`;\r\n\r\nconst CardImage = styled.img`\r\n  margin-bottom: 16px;\r\n  margin-left: 10px;\r\n  transform: scaleX(-1);\r\n`;\r\n\r\nconst Label = styled.div`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  font-size: 14px;\r\n`;\r\n\r\nconst Actions = styled.div`\r\n  margin-top: 24px;\r\n`;\r\n\r\nconst FarmedStakingCard = () => {\r\n  const [pendingTx, setPendingTx] = useState(false);\r\n  const { account } = useWeb3React();\r\n  const TranslateString = useI18n();\r\n  const farmsWithBalance = useFarmsWithBalance();\r\n  const balancesWithValue = farmsWithBalance.filter(\r\n    (balanceType) => balanceType.balance.toNumber() > 0,\r\n  );\r\n\r\n  const { onReward } = useAllHarvest(\r\n    balancesWithValue.map((farmWithBalance) => farmWithBalance.pid),\r\n  );\r\n\r\n  const harvestAllFarms = useCallback(async () => {\r\n    setPendingTx(true);\r\n    try {\r\n      await onReward();\r\n    } catch (error) {\r\n      // TODO: find a way to handle when the user rejects transaction or it fails\r\n    } finally {\r\n      setPendingTx(false);\r\n    }\r\n  }, [onReward]);\r\n\r\n  return (\r\n    <StyledFarmStakingCard>\r\n      <CardBody>\r\n        <Heading size=\"xl\" mb=\"24px\">\r\n          {TranslateString(542, \"Your Rewards\")}\r\n        </Heading>\r\n        <CardImage src={TreasureCoin} alt=\"logo\" width={84} height={84} />\r\n        <Block>\r\n          <Label>{TranslateString(544, \"TREASURE to Harvest\")}:</Label>\r\n          <CakeHarvestBalance />\r\n        </Block>\r\n        <Block>\r\n          <Label>{TranslateString(546, \"TREASURE in Wallet\")}:</Label>\r\n          <CakeWalletBalance />\r\n        </Block>\r\n        <Actions>\r\n          {account ? (\r\n            <Link to=\"/farms\">\r\n              <Button\r\n                id=\"harvest-all\"\r\n                // disabled={balancesWithValue.length <= 0 || pendingTx}\r\n                // onClick={harvestAllFarms}\r\n                width=\"100%\"\r\n              >\r\n                {pendingTx\r\n                  ? TranslateString(548, \"Collecting XPLAY\")\r\n                  : TranslateString(\r\n                      532,\r\n                      `Harvest all (${balancesWithValue.length})`,\r\n                    )}\r\n              </Button>\r\n            </Link>\r\n          ) : (\r\n            <ConnectWalletButton width=\"100%\" />\r\n          )}\r\n        </Actions>\r\n      </CardBody>\r\n    </StyledFarmStakingCard>\r\n  );\r\n};\r\n\r\nexport default FarmedStakingCard;\r\n","import { useCallback } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useDispatch } from 'react-redux'\r\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\r\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\r\nimport { useMasterchef, useSousChef } from './useContract'\r\n\r\nexport const useHarvest = (farmPid: number) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const txHash = await harvest(masterChefContract, farmPid, account)\r\n    dispatch(fetchFarmUserDataAsync(account))\r\n    return txHash\r\n  }, [account, dispatch, farmPid, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useAllHarvest = (farmPids: number[]) => {\r\n  const { account } = useWeb3React()\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    const harvestPromises = farmPids.reduce((accum, pid) => {\r\n      return [...accum, harvest(masterChefContract, pid, account)]\r\n    }, [])\r\n\r\n    return Promise.all(harvestPromises)\r\n  }, [account, farmPids, masterChefContract])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n\r\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\r\n  const dispatch = useDispatch()\r\n  const { account } = useWeb3React()\r\n  const sousChefContract = useSousChef(sousId)\r\n  const masterChefContract = useMasterchef()\r\n\r\n  const handleHarvest = useCallback(async () => {\r\n    if (sousId === 0) {\r\n      await harvest(masterChefContract, 0, account)\r\n    } else if (isUsingBnb) {\r\n      await soushHarvestBnb(sousChefContract, account)\r\n    } else {\r\n      await soushHarvest(sousChefContract, account)\r\n    }\r\n    dispatch(updateUserPendingReward(sousId, account))\r\n    dispatch(updateUserBalance(sousId, account))\r\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\r\n\r\n  return { onReward: handleHarvest }\r\n}\r\n","import React from 'react'\r\nimport { CardBody, Heading, Text } from '@pancakeswap-libs/uikit'\r\nimport styled from 'styled-components'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\r\nimport useI18n from 'hooks/useI18n'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport {\r\n  useFarmCakePerBlock,\r\n} from \"state/hooks\";\r\nimport Card from 'components/custom/Card'\r\nimport CardValue from './CardValue'\r\n\r\n\r\n\r\nconst StyledCakeStats = styled(Card)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`\r\n\r\nconst Row = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  font-size: 14px;\r\n  justify-content: space-between;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nconst CakeStats = () => {\r\n  const TranslateString = useI18n()\r\n  const totalSupply = useTotalSupply()\r\n  const burnedBalance = getBalanceNumber(useBurnedBalance(getCakeAddress()))\r\n  const cakeSupply = totalSupply ? getBalanceNumber(totalSupply) - burnedBalance : 0\r\n  const rewardPerBlock = useFarmCakePerBlock();\r\n  return (\r\n    <StyledCakeStats>\r\n      <CardBody>\r\n        <Heading size=\"xl\" mb=\"24px\">\r\n          {TranslateString(534, 'Treasury Stats')}\r\n        </Heading>\r\n        <Row>\r\n          <Text fontSize=\"14px\">{TranslateString(536, 'Total TREASURE Supply')}</Text>\r\n          {cakeSupply && <CardValue fontSize=\"14px\" value={cakeSupply} />}\r\n        </Row>\r\n        <Row>\r\n          <Text fontSize=\"14px\">{TranslateString(538, 'Total TREASURE Burned')}</Text>\r\n          <CardValue fontSize=\"14px\" decimals={0} value={burnedBalance} />\r\n        </Row>\r\n      </CardBody>\r\n    </StyledCakeStats>\r\n  )\r\n}\r\n\r\nexport default CakeStats\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport { CardBody, Heading, Skeleton, Text } from \"@pancakeswap-libs/uikit\";\r\nimport useI18n from \"hooks/useI18n\";\r\nimport {\r\n  useFarmsV2,\r\n  usePriceBnbBusd,\r\n  useFarmCakePerBlock,\r\n  usePriceX2PBusd,\r\n  usePriceCakeBusd,\r\n} from \"state/hooks\";\r\nimport Card from \"components/custom/Card\";\r\nimport { QuoteToken } from \"config/constants/types\";\r\n\r\nconst StyledTotalValueLockedCard = styled(Card)`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n`;\r\n\r\nconst TotalValueLockedCard = () => {\r\n  const TranslateString = useI18n();\r\n  const farms = useFarmsV2();\r\n  const cakePrice = usePriceCakeBusd();\r\n  const bnbPrice = usePriceBnbBusd();\r\n  const x2pPrice = usePriceX2PBusd();\r\n  let tvl = new BigNumber(0);\r\n  farms.forEach((farm) => {\r\n    let liquidity = farm.lpTotalInQuoteToken;\r\n    if (!farm.lpTotalInQuoteToken) {\r\n      liquidity = new BigNumber(0);\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.BNB) {\r\n      liquidity = bnbPrice.times(farm.lpTotalInQuoteToken);\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n      liquidity = cakePrice.times(farm.lpTokenBalanceMC);\r\n    }\r\n    if (farm.quoteTokenSymbol === QuoteToken.X2P) {\r\n      liquidity = x2pPrice.times(farm.lpTokenBalanceMC);\r\n    }\r\n    tvl = tvl.plus(liquidity);\r\n  });\r\n\r\n  const totalValueFormated = tvl && Number(tvl)\r\n    ? `${Number(tvl).toLocaleString(undefined, { maximumFractionDigits: 2 })}`\r\n    : \" - \";\r\n\r\n  return (\r\n    <StyledTotalValueLockedCard>\r\n      <CardBody>\r\n        <Heading size=\"lg\" mb=\"24px\">\r\n          {TranslateString(762, \"Total Value Locked (TVL)\")}\r\n        </Heading>\r\n        {tvl ? (\r\n          <>\r\n            <Heading size=\"xl\">{`$${totalValueFormated}`}</Heading>\r\n            <br />\r\n            <Text color=\"textSubtle\">\r\n              {TranslateString(\r\n                764,\r\n                \"Across all internal and external LPs and Yield Farming Pools\",\r\n              )}\r\n            </Text>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Skeleton height={66} />\r\n          </>\r\n        )}\r\n      </CardBody>\r\n    </StyledTotalValueLockedCard>\r\n  );\r\n};\r\n\r\nexport default TotalValueLockedCard;\r\n","import React, { useCallback, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  Heading,\r\n  CardBody,\r\n  Flex,\r\n  ArrowForwardIcon,\r\n  Skeleton,\r\n} from \"@pancakeswap-libs/uikit\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport useI18n from \"hooks/useI18n\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport { QuoteToken } from \"config/constants/types\";\r\nimport {\r\n  useFarmsV2,\r\n  usePriceBnbBusd,\r\n  useFarmCakePerBlock,\r\n  usePriceCakeBusd,\r\n  usePriceX2PBusd,\r\n} from \"state/hooks\";\r\nimport { BLOCKS_PER_YEAR, CAKE_POOL_PID } from \"config\";\r\nimport Card from \"components/custom/Card\";\r\nimport BoxLogo from 'assets/images/boxlogo.png'\r\n\r\nconst StyledFarmStakingCard = styled(Card)`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 100%;\r\n  background-image: ${BoxLogo};\r\n  background-size: 45%;\r\n  background-position: 85% 50%;\r\n  background-repeat: no-repeat;\r\n\r\n  @media only screen and (min-width: 792px) {\r\n    background-size: 50%;\r\n    background-position: 45% 70%;\r\n    background-repeat: no-repeat;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    margin: 0;\r\n    max-width: none;\r\n  }\r\n`;\r\nconst CardMidContent = styled(Heading).attrs({ size: \"xl\" })`\r\n  line-height: 44px;\r\n`;\r\nconst EarnAPYCard = () => {\r\n  const TranslateString = useI18n();\r\n  const farmsLP = useFarmsV2();\r\n  const bnbPrice = usePriceBnbBusd();\r\n\r\n  const cakePrice = usePriceCakeBusd();\r\n  const x2pPrice = usePriceX2PBusd();\r\n\r\n  const maxAPY = useRef(Number.MIN_VALUE);\r\n\r\n  const getHighestAPY = () => {\r\n    calculateAPY(farmsLP);\r\n    return (maxAPY.current * 100).toLocaleString(\"en-US\").slice(0, -1);\r\n  };\r\n\r\n  const calculateAPY = useCallback(\r\n    (farmsToDisplay) => {\r\n      const cakePriceVsBNB = new BigNumber(cakePrice.div(bnbPrice));\r\n\r\n      farmsToDisplay.map((farm) => {\r\n        if (\r\n          !farm.tokenAmount ||\r\n          !farm.lpTotalInQuoteToken ||\r\n          !farm.lpTotalInQuoteToken\r\n        ) {\r\n          return farm;\r\n        }\r\n        const cakeRewardPerBlock = new BigNumber(farm.rewardTokenPerBlock);\r\n        const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR);\r\n\r\n        let apy = cakePriceVsBNB\r\n          .times(cakeRewardPerYear)\r\n          .div(farm.lpTotalInQuoteToken);\r\n\r\n        if (farm.quoteTokenSymbol === QuoteToken.CAKE) {\r\n          apy = cakeRewardPerYear.div(farm.lpTokenBalanceMC);\r\n          console.log(\r\n            \"here xplay\",\r\n            apy.toString(),\r\n            cakeRewardPerYear.toString(),\r\n            farm.lpTokenBalanceMC,\r\n          );\r\n        } else if (farm.quoteTokenSymbol === QuoteToken.X2P) {\r\n          apy = cakeRewardPerYear\r\n            .times(cakePrice)\r\n            .div(farm.lpTokenBalanceMC)\r\n            .div(x2pPrice);\r\n          console.log(\"here x2p\", apy.toString());\r\n        }\r\n\r\n        if (maxAPY.current < apy.toNumber()) maxAPY.current = apy.toNumber();\r\n\r\n        return apy;\r\n      });\r\n    },\r\n    [bnbPrice, x2pPrice, cakePrice],\r\n  );\r\n\r\n  return (\r\n    <StyledFarmStakingCard>\r\n      <CardBody>\r\n        <Heading color=\"contrast\" size=\"lg\">\r\n          Earn up to\r\n        </Heading>\r\n        <CardMidContent color=\"#79ff4e\">\r\n          {getHighestAPY() ? (\r\n            `${getHighestAPY()}% APY`\r\n          ) : (\r\n            <Skeleton animation=\"pulse\" variant=\"rect\" height=\"44px\" />\r\n          )}\r\n        </CardMidContent>\r\n        <Flex justifyContent=\"space-between\">\r\n          <Heading color=\"contrast\" size=\"lg\">\r\n            by Staking\r\n          </Heading>\r\n          <NavLink exact activeClassName=\"active\" to=\"/farms\" id=\"farm-apy-cta\">\r\n            <ArrowForwardIcon transform=\"scale(2.5)\" marginRight='20px' mt={100} color=\"primary\" />\r\n          </NavLink>\r\n        </Flex>\r\n      </CardBody>\r\n    </StyledFarmStakingCard>\r\n  );\r\n};\r\n\r\nexport default EarnAPYCard;\r\n","import React, { useRef, useEffect, useCallback } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport Particles from \"react-tsparticles\";\nimport HexBg from 'assets/images/hexBg.png'\nimport Logo from 'assets/images/logo.png'\nimport TreasureCoin from 'assets/images/treasurecoin.png'\n\n\nconst Container = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  height: 100vh;\n  width: 100vw;\n  z-index: 0;\n  transition: opacity 0.3s ease;\n`;\n\nfunction Video() {\n  const containerRef = useRef(null);\n\n  return (\n    <>\n      <Container ref={containerRef}>\n        <Particles\n          id=\"tsparticles\"\n          options={{\n            fullScreen: {\n              enable: true,\n            },\n            fpsLimit: 60,\n            particles: {\n              groups: {\n                z5000: {\n                  number: {\n                    value: 70,\n                  },\n                  zIndex: {\n                    value: 5000,\n                  },\n                },\n                z7500: {\n                  number: {\n                    value: 30,\n                  },\n                  zIndex: {\n                    value: 75,\n                  },\n                },\n                z2500: {\n                  number: {\n                    value: 50,\n                  },\n                  zIndex: {\n                    value: 25,\n                  },\n                },\n                z1000: {\n                  number: {\n                    value: 40,\n                  },\n                  zIndex: {\n                    value: 10,\n                  },\n                },\n              },\n              number: {\n                value: 200,\n                density: {\n                  enable: false,\n                  value_area: 800,\n                },\n              },\n              color: {\n                value: \"#ffdf88\",\n                animation: {\n                  enable: false,\n                  speed: 20,\n                  sync: true,\n                },\n              },\n              shape: {\n                type: \"image\",\n                options: {\n                  images: [{ src: Logo, width: 350, height: 350 }],\n                },\n              },\n              opacity: {\n                value: 1,\n                random: false,\n                animation: {\n                  enable: false,\n                  speed: 3,\n                  minimumValue: 0.1,\n                  sync: false,\n                },\n              },\n              size: {\n                value: 10,\n              },\n              move: {\n                angle: {\n                  value: 10,\n                  offset: 0,\n                },\n                enable: true,\n                speed: 5,\n                direction: \"top\",\n                random: false,\n                straight: false,\n                outModes: {\n                  default: \"out\",\n                },\n                attract: {\n                  enable: false,\n                  rotateX: 600,\n                  rotateY: 1200,\n                },\n              },\n              zIndex: {\n                value: 5,\n                opacityRate: 0.5,\n              },\n            },\n            detectRetina: true,\n            background: {\n              // color: \"rgba(0,0,0,0.1)\",\n              image: HexBg,\n              position: \"50% 50%\",\n              repeat: \"no-repeat\",\n              size: \"cover\",\n              opacity: 0.2,\n            },\n            emitters: {\n              position: {\n                y: 110,\n                x: 50,\n              },\n              rate: {\n                delay: 3,\n                quantity: 1,\n              },\n              size: {\n                width: 0,\n                height: 0,\n              },\n              particles: {\n                shape: {\n                  type: \"images\",\n                  options: {\n                    images: [\n                      {\n                        src: TreasureCoin,\n                        width: 205,\n                        height: 205,\n                      },\n                      {\n                        src: TreasureCoin,\n                        width: 307,\n                        height: 307,\n                      },\n                      {\n                        src: TreasureCoin,\n                        width: 100,\n                        height: 100,\n                      },\n                      // {\n                      //   src: \"https://particles.js.org/images/amongus_lime.png\",\n                      //   width: 206,\n                      //   height: 267,\n                      // },\n                      // {\n                      //   src: \"https://particles.js.org/images/amongus_orange.png\",\n                      //   width: 205,\n                      //   height: 265,\n                      // },\n                      // {\n                      //   src: \"https://particles.js.org/images/amongus_pink.png\",\n                      //   width: 205,\n                      //   height: 265,\n                      // },\n                      // {\n                      //   src: \"https://particles.js.org/images/amongus_red.png\",\n                      //   width: 204,\n                      //   height: 267,\n                      // },\n                      // {\n                      //   src: \"https://particles.js.org/images/amongus_white.png\",\n                      //   width: 205,\n                      //   height: 267,\n                      // },\n                    ],\n                  },\n                },\n                size: {\n                  value: 40,\n                },\n                move: {\n                  speed: 10,\n                  outModes: {\n                    default: \"bounce\",\n                    top: \"destroy\",\n                  },\n                  straight: false,\n                },\n                zIndex: {\n                  value: 0,\n                },\n                rotate: {\n                  value: {\n                    min: 0,\n                    max: 360,\n                  },\n                  animation: {\n                    enable: true,\n                    speed: 10,\n                    sync: true,\n                  },\n                },\n              },\n            },\n          }}\n        />\n      </Container>\n    </>\n  );\n}\n\nexport default Video;\n","import React, { useState } from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport PageLoader from \"components/PageLoader\";\n// eslint-disable-next-line import/no-named-as-default\n// import Planet1 from \"./Planet1\";\nimport Sprites from \"./Sprites\";\n\nconst animateLightBar = keyframes`\n\t0%,5% {\n\t\ttransform: scaleY(0) ;\n\t}\n    10%{\n        transform: scaleY(1) ;\n    }\n\t90% {\n        transform: scaleY(1) ;\n\t}\n\t95%,100% {\n        transform: scaleY(0) ;\n\t}\n`;\nconst TextBoxAnimation = keyframes`\n   0%,5% {\n\t\ttransform: translate3d(-80vw,0,0);\n\t}\n    10%{\n        transform:  translate3d(-80vw,0,0);\n    }\n\t90% {\n        transform:  translate3d(0,0,0);\n\t}\n\t95%,100% {\n        transform: translate3d(0,0,0);\n\t}\n`;\nconst TextAnimation = keyframes`\n    0%,5% {\n\t\ttransform:  translate3d(80vw,0,0);\n\t}\n    10%{\n        transform:  translate3d(80vw,0,0);\n    }\n\t90% {\n        transform:  translate3d(0,0,0);\n\t}\n\t95%,100% {\n        transform: translate3d(0,0,0);\n\t}\n`;\nconst BorderShow = keyframes`\n    0%{\n\t\topacity:0;\n\t}\n   \n\t95% {\n        opacity:0;\n\t}\n    100%{\n        opacity:1;\n    }\n`;\nconst Container = styled.div`\n  position: relative;\n  padding: 3rem;\n  @media only screen and (max-width: 500px) {\n    padding: 3rem 0 0 0;\n  }\n`;\nconst Wrapper = styled.div`\n  margin-top: 30px;\n  position: relative;\n  top: 10%;\n  left: 10%;\n  width: 80%;\n  font-size: 2rem;\n  background-color: #ffce0024;\n  border-radius: 10px;\n  z-index: 3;\n  :after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    box-shadow: inset 0 0 0.1em #ffce00, inset 0 0 0.2em #ffce00,\n      inset 0 0 0.4em #ffce00, 0 0 1em #ffce00;\n    animation: ${BorderShow} 2s linear forwards;\n    border: 5px solid #fff;\n    border-radius: inherit;\n  }\n  @media only screen and (max-width: 500px) {\n    top: 15%;\n  }\n  @media only screen and (min-width: 568px) {\n    font-size: 3.5rem;\n  }\n  @media only screen and (min-width: 768px) {\n    font-size: 5rem;\n  }\n`;\nconst TextBox = styled.div`\n  overflow: hidden;\n  width: 100%;\n  /* transform: translate(300px,0); */\n  animation: ${TextBoxAnimation} 2s linear forwards;\n  padding: 1rem 1rem;\n`;\nconst H1 = styled.h1`\n  text-align: center;\n  font-size: inherit;\n  /* white-space: nowrap; */\n  color: #fff;\n  text-shadow: 0 0 0.1em #ffce00, 0 0 0.2em #ffce00, 0 0 0.4em #ffce00,\n    0 0 0.8em #ffce00, 0 0 1.6em #ffce00;\n  /* transform: translate(-300px,0); */\n  animation: ${TextAnimation} 2s linear forwards;\n`;\nconst LightBar = styled.div`\n  position: relative;\n  top: 0;\n  right: 0;\n  width: 10px;\n  height: 100%;\n  border-radius: 10px;\n  background-color: #fff;\n  z-index: 2;\n  box-shadow: 0 0 10px #ffce00, 0 0 20px #ffce00, 0 0 40px #ffce00,\n    0 0 80px #ffce00, 0 0 120px #ffce00;\n  animation: ${animateLightBar} 2s linear forwards;\n`;\n\nfunction Landing({ videoPlayed, setVideoPlayed }) {\n  const [imageLoading, setImageLoading] = useState(false);\n  const [videoLoading, setVideoLoading] = useState(true);\n  const [videoPlaying, setVideoPlaying] = useState(videoPlayed);\n  return (\n    <Container>\n      {imageLoading ? (\n        <PageLoader />\n      ) : \n            (\n            <Wrapper>\n              <TextBox>\n                <H1>Treasure <br/> DAO</H1>\n                <LightBar />\n              </TextBox>\n            </Wrapper>\n      )}\n      <Sprites/>\n    </Container>\n  );\n}\n\nexport default Landing;\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Heading, Text, BaseLayout } from \"@pancakeswap-libs/uikit\";\r\nimport useI18n from \"hooks/useI18n\";\r\nimport Page from \"components/layout/Page\";\r\nimport FarmStakingCard from \"views/Home/components/FarmStakingCard\";\r\n// import LotteryCard from 'views/Home/components/LotteryCard'\r\nimport CakeStats from \"views/Home/components/CakeStats\";\r\nimport TotalValueLockedCard from \"views/Home/components/TotalValueLockedCard\";\r\nimport EarnAPYCard from \"views/Home/components/EarnAPYCard\";\r\n// import EarnAssetCard from 'views/Home/components/EarnAssetCard'\r\n// import WinCard from 'views/Home/components/WinCard'\r\n// import Logo from 'views/Home/components/Logo'\r\nimport Landing from \"components/custom/Landing\";\r\nimport HexBg from 'assets/images/hexBg.png'\r\n\r\n\r\nconst Container = styled(Page)`\r\n  background: #090e1a ${HexBg};\r\n  padding: 0;\r\n  max-width: 100vw;\r\n`;\r\nconst Hero = styled.div`\r\n  align-items: center;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  margin: auto;\r\n  margin-bottom: 32px;\r\n  text-align: center;\r\n`;\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: stretch;\r\n  justify-content: stretch;\r\n  margin-bottom: 32px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n    width: 100%;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 8;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`;\r\n\r\nconst CTACards = styled(BaseLayout)`\r\n  align-items: start;\r\n  margin-bottom: 32px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 8;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 4;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  > div {\r\n    width: 100%;\r\n    margin: 1rem;\r\n  }\r\n  @media only screen and (min-width: 800px) {\r\n    flex-direction: row;\r\n    align-items: stretch;\r\n    > div {\r\n      min-width: 45%;\r\n      max-width: 45%;\r\n      margin: 0 1rem;\r\n    }\r\n  }\r\n`;\r\nconst Home = ({ videoPlayed,setVideoPlayed }) => {\r\n  const TranslateString = useI18n();\r\n\r\n  return (\r\n    <Container>\r\n      {/* <Hero>\r\n        <Text>{TranslateString(578, 'The #1 AMM and yield farm on Binance Smart Chain.')}</Text>\r\n      </Hero> */}\r\n      {/* <Popup/> */}\r\n      <Landing videoPlayed={videoPlayed} setVideoPlayed={setVideoPlayed} />\r\n      <div style={{ padding: \"3rem 1rem\" }}>\r\n        <Flex>\r\n          <EarnAPYCard />\r\n          <FarmStakingCard />\r\n          {/* <EarnAssetCard /> */}\r\n          {/* <LotteryCard /> */}\r\n        </Flex>\r\n        <CTACards>\r\n          {/* <EarnAPYCard /> */}\r\n          {/* <WinCard /> */}\r\n        </CTACards>\r\n        <Flex>\r\n          <CakeStats />\r\n          <TotalValueLockedCard />\r\n        </Flex>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import BigNumber from 'bignumber.js'\r\n\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\r\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\r\n  return displayBalance.toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\r\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\r\n}\r\n","import BigNumber from \"bignumber.js\";\r\nimport { ethers } from \"ethers\";\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n  return lpContract.methods\r\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\r\n    .send({ from: account });\r\n};\r\n\r\nexport const stake = async (masterChefContract, pid, amount, account) => {\r\n  if (pid === 0) {\r\n    return masterChefContract.methods\r\n      .deposit(\r\n        pid,\r\n        new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(),\r\n      )\r\n      .send({ from: account })\r\n      .on(\"transactionHash\", (tx) => {\r\n        return tx.transactionHash;\r\n      });\r\n  }\r\n  const decimals = pid === 3 ? 9 : 18\r\n\r\n  return masterChefContract.methods\r\n    .deposit(\r\n      pid,\r\n      new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toString(),\r\n    )\r\n    .send({ from: account })\r\n    .on(\"transactionHash\", (tx) => {\r\n      return tx.transactionHash;\r\n    });\r\n};\r\n\r\nexport const stakeV2 = async (farmContract, index, amount, account) => {\r\n  const decimals = index === 3 ? 9 : 18;\r\n  return farmContract.methods\r\n    .stakeTokens(\r\n      new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toString(),\r\n    )\r\n    .send({ from: account })\r\n    .on(\"transactionHash\", (tx) => {\r\n      return tx.transactionHash;\r\n    });\r\n};\r\n\r\n\r\nexport const sousStake = async (\r\n  sousChefContract,\r\n  amount,\r\n  decimals = 18,\r\n  account,\r\n) => {\r\n  return sousChefContract.methods\r\n    .deposit(\r\n      new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toString(),\r\n    )\r\n    .send({ from: account })\r\n    .on(\"transactionHash\", (tx) => {\r\n      return tx.transactionHash;\r\n    });\r\n};\r\n\r\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({\r\n      from: account,\r\n      gas: 200000,\r\n      value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(),\r\n    })\r\n    .on(\"transactionHash\", (tx) => {\r\n      return tx.transactionHash;\r\n    });\r\n};\r\n\r\nexport const unstake = async (masterChefContract, pid, amount, account) => {\r\n  if (amount === '0'){\r\n    return masterChefContract.methods\r\n      .emergencyWithdraw(\r\n        pid,\r\n      )\r\n      .send({ from: account })\r\n      .on(\"transactionHash\", (tx) => {\r\n        return tx.transactionHash;\r\n      });\r\n  }\r\n  if (pid === 0) {\r\n    return masterChefContract.methods\r\n      .withdraw(\r\n        pid,\r\n        new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(),\r\n      )\r\n      .send({ from: account })\r\n      .on(\"transactionHash\", (tx) => {\r\n        return tx.transactionHash;\r\n      });\r\n  }\r\n\r\n  return masterChefContract.methods\r\n    .withdraw(\r\n      pid,\r\n      new BigNumber(amount)\r\n        .times(new BigNumber(10).pow(pid === 3 ? 9 : 18))\r\n        .toString(),\r\n    )\r\n    .send({ from: account })\r\n    .on(\"transactionHash\", (tx) => {\r\n      return tx.transactionHash;\r\n    });\r\n};\r\n\r\n\r\nexport const unstakeV2 = async (farmContract, index, amount, account) => {\r\n  return farmContract.methods\r\n    .unstakeTokens(\r\n      new BigNumber(amount)\r\n        .times(new BigNumber(10).pow(index === 3 ? 9 : 18))\r\n        .toString(), true\r\n    )\r\n    .send({ from: account })\r\n    .on(\"transactionHash\", (tx) => {\r\n      return tx.transactionHash;\r\n    });\r\n};\r\n\r\nexport const sousUnstake = async (\r\n  sousChefContract,\r\n  amount,\r\n  decimals = 18,\r\n  account,\r\n) => {\r\n  // shit code: hard fix for old CTK and BLK\r\n  if (\r\n    sousChefContract.options.address ===\r\n    \"0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC\"\r\n  ) {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on(\"transactionHash\", (tx) => {\r\n        return tx.transactionHash;\r\n      });\r\n  }\r\n  if (\r\n    sousChefContract.options.address ===\r\n    \"0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831\"\r\n  ) {\r\n    return sousChefContract.methods\r\n      .emergencyWithdraw()\r\n      .send({ from: account })\r\n      .on(\"transactionHash\", (tx) => {\r\n        return tx.transactionHash;\r\n      });\r\n  }\r\n\r\n  return sousChefContract.methods\r\n    .withdraw(\r\n      new BigNumber(amount).times(new BigNumber(10).pow(decimals)).toString(),\r\n    )\r\n    .send({ from: account })\r\n    .on(\"transactionHash\", (tx) => {\r\n      return tx.transactionHash;\r\n    });\r\n};\r\n\r\nexport const sousEmegencyUnstake = async (\r\n  sousChefContract,\r\n  amount,\r\n  account,\r\n) => {\r\n  return sousChefContract.methods\r\n    .emergencyWithdraw()\r\n    .send({ from: account })\r\n    .on(\"transactionHash\", (tx) => {\r\n      return tx.transactionHash;\r\n    });\r\n};\r\n\r\nexport const harvest = async (masterChefContract, pid, account) => {\r\n  return masterChefContract.methods\r\n    .deposit(pid, \"0\")\r\n    .send({ from: account })\r\n    .on(\"transactionHash\", (tx) => {\r\n      return tx.transactionHash;\r\n    });\r\n};\r\n\r\nexport const soushHarvest = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit(\"0\")\r\n    .send({ from: account, gas: 200000 })\r\n    .on(\"transactionHash\", (tx) => {\r\n      return tx.transactionHash;\r\n    });\r\n};\r\n\r\nexport const soushHarvestBnb = async (sousChefContract, account) => {\r\n  return sousChefContract.methods\r\n    .deposit()\r\n    .send({ from: account, gas: 200000, value: new BigNumber(0) })\r\n    .on(\"transactionHash\", (tx) => {\r\n      return tx.transactionHash;\r\n    });\r\n};\r\n","import styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  max-width: 1200px;\r\n  padding-left: 16px;\r\n  padding-right: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-left: 24px;\r\n    padding-right: 24px;\r\n  }\r\n`\r\n\r\nexport default Container\r\n","import styled from 'styled-components'\r\nimport Container from './Container'\r\n\r\nconst Page = styled(Container)`\r\n  min-height: calc(100vh - 64px);\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 24px;\r\n    padding-bottom: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n`\r\n\r\nexport default Page\r\n","export default __webpack_public_path__ + \"static/media/boxlogo.c68b3846.png\";","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\nexport const CAKE_POOL_PID = 1\nexport const BASE_URL = 'https://babyfarm.netlify.app'\nexport const BASE_EXCHANGE_URL = 'https://app.treasuretoken.finance/'\nexport const BASE_ADD_LIQUIDITY_URL = `${BASE_EXCHANGE_URL}/#/add`\nexport const BASE_LIQUIDITY_POOL_URL = `${BASE_EXCHANGE_URL}/#/pool`\nexport const LOTTERY_MAX_NUMBER_OF_TICKETS = 50\nexport const LOTTERY_TICKET_PRICE = 1\n","export default __webpack_public_path__ + \"static/media/hexBg.e607e969.png\";"],"sourceRoot":""}